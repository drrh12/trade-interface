{"version":3,"sources":["core/transport/types/ConnectionStatus.ts","core/transport/WsConnectionProxy.ts","core/transport/Connection.ts","modules/app/actions.ts","modules/reference-data/selectors.ts","modules/reference-data/actions.ts","modules/selection/actions.ts","core/transport/actions.ts","modules/reference-data/utils.ts","modules/ticker/actions.ts","modules/candles/actions.ts","modules/selection/selectors.ts","modules/app/epics.ts","core/transport/epics.ts","modules/trades/actions.ts","core/transport/selectors.ts","modules/trades/epics.ts","modules/reference-data/epics.ts","modules/ticker/epics.ts","modules/candles/epics.ts","modules/book/actions.ts","modules/selection/epics.ts","modules/book/epics.ts","modules/ping/actions.ts","modules/ping/epics.ts","core/transport/utils.ts","modules/trades/reducer.ts","core/transport/reducer.ts","modules/reference-data/reducer.ts","modules/ticker/reducer.ts","modules/candles/utils.ts","modules/candles/reducer.ts","modules/selection/reducer.ts","modules/book/reducer.ts","modules/ping/reducer.ts","modules/root.ts","modules/redux/store.ts","core/hooks/useThrottle.ts","modules/ag-grid/formatter.ts","core/hooks/useGridResize.ts","theme/style.ts","core/components/Loading/Loading.styled.ts","core/components/Loading/index.ts","core/components/Loading/Loading.tsx","modules/trades/components/Trades/Trades.styled.ts","core/components/Stale/Stale.styled.ts","core/components/Stale/index.ts","core/components/Stale/Stale.tsx","modules/trades/components/Trades/Trades.tsx","modules/trades/selectors.ts","modules/trades/components/Trades/index.ts","modules/trades/components/Trades/Trades.container.tsx","modules/candles/selectors.ts","modules/ticker/selectors.ts","core/utils.ts","core/hooks/usePrevious.ts","modules/ticker/components/Ticker/Ticker.styled.ts","modules/ticker/components/Tickers/Tickers.styled.ts","core/components/UpdateHighlight/UpdateHightlight.styled.ts","core/components/UpdateHighlight/UpdateHighlight.tsx","core/components/TrendIndicator/TrendIndicator.styled.ts","core/components/TrendIndicator/index.ts","core/components/TrendIndicator/TrendIndicator.tsx","modules/ticker/components/Ticker/Ticker.tsx","modules/ticker/components/Ticker/index.ts","modules/ticker/components/Ticker/Ticker.container.tsx","modules/ticker/components/Tickers/Tickers.tsx","modules/ticker/components/Tickers/index.ts","modules/ticker/components/Tickers/Tickers.container.tsx","modules/candles/components/CandlesChart/CandlesChart.styled.ts","theme/Highstock.ts","modules/candles/components/CandlesChart/CandlesChart.tsx","modules/candles/components/CandlesChart/index.ts","modules/candles/components/CandlesChart/CandlesChart.container.tsx","modules/book/components/Book/renderers.ts","modules/book/components/Book/Book.styled.ts","modules/book/components/Book/Book.tsx","modules/book/selectors.ts","modules/book/components/Book/index.ts","modules/book/components/Book/Book.container.tsx","modules/book/components/DepthChart/DepthChart.styled.ts","theme/Highchart.ts","modules/book/components/DepthChart/DepthChart.tsx","modules/book/components/DepthChart/index.ts","modules/book/components/DepthChart/DepthChart.container.tsx","modules/ticker/components/Market/Market.styled.ts","core/components/LineChart/LineChart.styled.ts","core/components/LineChart/index.ts","core/components/LineChart/LineChart.tsx","modules/ticker/components/Market/PriceChartRenderer.styled.ts","modules/ticker/components/Market/PriceChartRenderer.tsx","core/components/UpdateHighlight/index.ts","modules/ticker/components/Market/PriceRenderer.tsx","modules/ticker/components/Market/Market.tsx","modules/ticker/components/Market/index.ts","modules/ticker/components/Market/Market.container.tsx","core/components/Widget/Widget.styled.ts","core/components/Widget/index.ts","core/components/Widget/Widget.tsx","core/components/Diagnostics/Diagnostics.styled.ts","core/components/Diagnostics/index.ts","core/components/Diagnostics/Diagnostics.tsx","modules/ping/selectors.ts","modules/ping/components/Latency/Latency.styled.ts","modules/ping/components/Latency/Latency.tsx","modules/ping/components/Latency/index.ts","modules/ping/components/Latency/Latency.container.tsx","core/components/AnimatedCube/AnimatedCube.styled.ts","core/components/AnimatedCube/index.ts","core/components/AnimatedCube/AnimatedCube.tsx","modules/common/CurrencyPairTransition/CurrencyPairTransition.tsx","modules/common/CurrencyPairTransition/index.ts","modules/common/CurrencyPairTransition/CurrencyPairTransition.container.tsx","App.styled.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["ConnectionStatus","WsConnectionProxy","socket","onConnectFn","onReceivedFn","onErrorFn","onCloseFn","this","undefined","realm","WebSocket","onopen","onmessage","data","onerror","error","onclose","Error","message","readyState","OPEN","console","warn","send","callback","Connection","connectionProxy","start","stop","onConnect","onReceived","onError","onClose","AppActions","bootstrapApp","action","getCurrencyPairs","createSelector","state","refData","currencyPairs","RefDataActions","loadRefData","loadRefDataAck","payload","loadRefDataNack","SelectionActions","selectCurrencyPair","TransportActions","init","sendMessage","receiveMessage","meta","changeConnectionStatus","subscribeToChannel","subscribeToChannelAck","subscribeToChannelNack","unsubscribeFromChannel","unsubscribeFromChannelAck","unsubscribeFromChannelNack","staleSubscription","parseCurrencyPair","currencyPair","slice","formatCurrencyPair","join","formatPrice","price","numeral","format","TickerActions","subscribeToTicker","CandlesActions","subscribeToCandles","unsubscribeFromCandles","getSelectedCurrencyPair","selection","combineEpics","action$","state$","pipe","ofType","switchMap","log","merge","filter","Connected","of","take","mergeMap","value","selectionActions","tickerActions","map","symbol","candleActions","timeframe","from","wsEndpoint","counter","ticker","distinctUntilChanged","tap","document","title","lastPrice","toFixed","EMPTY","connection","connect","Observable","subscriber","next","onReceive","parsedData","JSON","parse","channelId","Array","isArray","hasOwnProperty","chanId","subscriptions","Disconnected","stringify","concatMap","rootAction","isSubscribing","type","event","channel","timeout","receiveMessageAction","msg","request","catchError","subscribeAction","bufferTime","actions","length","takeUntil","timer","TradesActions","subscribeToTrades","unsubscribeFromTrades","getSubscriptions","getSubscriptionId","memoize","channelIds","Object","keys","Number","find","every","key","sort","getIsSubscriptionStale","subscriptionId","Boolean","isStale","result","push","fromFetch","response","json","BookActions","subscribeToBook","unsubscribeFromBook","statePairs$","pairwise","withLatestFrom","oldState","oldCurrencyPair","unsubscribeActions","subscribeActions","prec","PingActions","updateLatency","interval","i","cid","pingTimestamp","Date","now","PING_INTERVAL_IN_MS","latency","isHeartbeat","isSubscriptionMessage","isUnsubscriptionMessage","isErrorMessage","initialState","snapshotReducer","a","b","id","timestamp","amount","updateReducer","trade","existingTradeIndex","findIndex","x","newOrUpdatedTrade","updatedState","splice","tradesReducer","reducer","on","subscriptionsReducer","refDataReducer","tickerReducer","bid","bidSize","ask","askSize","dailyChange","dailyChangeRelative","volume","high","low","getLookupKey","open","close","candle","candleIndex","c","newOrUpdatedCandle","candlesReducer","split","lookupKey","selectionReducer","order","existingOrderIndex","newOrUpdatedOrder","bookReducer","pingReducer","rootEpic","appEpics","refDataEpics","transportEpics","tradeEpics","tickerEpics","candlesEpics","selectionEpics","bookEpics","pingEpics","rootReducer","combineReducers","trades","candles","book","ping","dependencies","epicMiddleware","createEpicMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","useThrottleFn","fn","ms","throttledFn","useMemo","throttle","useEffect","cancel","useThrottle","useState","throttledValue","setThrottledValue","throttleFn","priceFormatter","params","amountFormatter","toString","volumeFormatter","timeFormatter","time","DateTime","fromMillis","toLocaleString","TIME_24_WITH_SECONDS","useGridResize","gridApi","sizeColumnsToFit","handleResize","debounce","addEventListener","removeEventListener","Palette","Bid","Ask","BidTransparent","AskTransparent","Positive","Negative","Orange","White","BackgroundColor","Label","Border","LightGray","DarkGray","animation","Container","styled","div","Title","Animation","barHeight","barWidth","Loading","props","Stale","Trades","throttledTrades","setGridApi","columnDefs","headerName","field","hide","valueFormatter","Math","abs","cellStyle","color","className","rowData","deltaRowDataMode","getRowNodeId","onGridReady","api","noRowsOverlayComponent","frameworkComponents","customLoadingOverlay","getTrades","selectedCurrencyPair","DEFAULT_CANDLES","candlesSelector","getCandles","tickerSelector","getTicker","getTickers","getVisibleCurrencyPairTickers","allCurrencyPairs","selectedCurrencyPairIndex","indexOf","range","index","values","getTickersWithPrices","tickers","subscribeIdGetter","prices","usePrevious","val","ref","useRef","current","isActive","CurrencyPair","Price","RelativeChange","isPositive","Change","itemCount","TickerWrapper","indexThreshold","floor","scaleFactor","reduce","acc","TickerContainer","direction","Content","IdenticalPart","DigitContainer","span","AnimatedValue","delay","scale","duration","createRef","timeoutId","animate","runAnimation","transform","iterations","setTimeout","requestAnimationFrame","clearTimeout","UpdateHighlight","changedPartRef","effect","prev","identicalPart","changedPart","setParts","prevValue","min","calculateParts","digits","digit","Icon","TrendIndicator","isHidden","setIsHidden","icon","Ticker","onClick","isPositiveChange","percentChange","dispatch","ownProps","Tickers","setDirection","previousSelectedCurrencyPairIndex","Highcharts","colors","chart","backgroundColor","stops","xAxis","labels","style","lineColor","minorGridLineColor","tickColor","yAxis","gridLineColor","tickWidth","tooltip","borderColor","plotOptions","series","dataLabels","fontSize","marker","boxplot","fillColor","candlestick","errorbar","legend","itemStyle","itemHoverStyle","itemHiddenStyle","credits","drilldown","activeAxisLabelStyle","activeDataLabelStyle","navigation","buttonOptions","symbolStroke","theme","fill","rangeSelector","buttonTheme","stroke","states","hover","select","inputBoxBorderColor","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","CandlesChart","isLoading","setIsLoading","useUTC","align","text","height","lineWidth","resize","enabled","top","offset","name","selected","buttons","count","chartOptions","setChartOptions","ohlc","rest","volumes","upColor","column","highcharts","options","constructorType","amountRenderer","styles","formattedStyles","bidAmountRenderer","width","bidDepth","maxDepth","valueFormatted","left","askAmountRenderer","askDepth","right","Book","orders","throttledOrders","cellRenderer","bookSelector","getBook","rawBook","bids","asks","levels","max","v","forEach","level","getPricePoints","uniq","computeDepth","pricePoints","orderFilter","depth","getDepth","bidPrices","askPrices","pricePoint","DepthChart","throttledDepth","autoRotation","area","categories","step","formatter","parseFloat","SvgContainer","svg","LineChart","maxX","minValue","diff","getSvgX","getSvgY","y","pathD","viewBox","d","PriceChartRenderer","PriceRenderer","setState","Component","Market","display","equals","isEqual","nodesToRefresh","forEachNode","node","shouldSelect","isSelected","setSelected","redrawRows","rowNodes","rowClassRules","rowSelection","onRowClicked","priceChartRenderer","priceRenderer","Header","Body","Widget","children","Diagnostics","setDelay","intervalId","setInterval","clearInterval","getLatency","Latency","Cube","Face","FrontFace","RightFace","AnimatedCube","trigger","setWidth","previousTrigger","previousWidth","containerRef","cubeRef","updateDimensions","getBoundingClientRect","handleWindowResize","easing","CurrencyPairTransition","TickersPanel","MarketPanel","TradesPanel","CandlesPanel","BookPanel","DepthPanel","Footer","App","store","createStore","applyMiddleware","run","configureStore","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.be7cda01.chunk.js","sourcesContent":["export enum ConnectionStatus {\n  Unknown,\n  Connected,\n  Disconnected,\n}\n","import { ConnectionProxy } from \"./types/ConnectionProxy\";\n\nexport class WsConnectionProxy implements ConnectionProxy {\n  private socket?: WebSocket;\n  private onConnectFn?: () => void;\n  private onReceivedFn?: (data?: any) => void;\n  private onErrorFn?: (error: any) => void;\n  private onCloseFn?: () => void;\n\n  constructor() {\n    this.socket = undefined;\n    this.onReceivedFn = undefined;\n  }\n\n  start(realm: string): void {\n    this.socket = new WebSocket(realm);\n    this.socket.onopen = () => this.onConnectFn && this.onConnectFn();\n    this.socket.onmessage = ({ data }) => {\n      this.onReceivedFn && this.onReceivedFn(data);\n    };\n    this.socket.onerror = (error) => this.onErrorFn && this.onErrorFn(error);\n    this.socket.onclose = () => this.onCloseFn && this.onCloseFn();\n  }\n\n  stop(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  send(message: any): void {\n    if (this.socket) {\n      if (this.socket.readyState !== this.socket.OPEN) {\n        console.warn(\n          `Fail to send message as WS is in ${this.socket.readyState} state`\n        );\n      } else {\n        this.socket.send(message);\n      }\n    }\n  }\n\n  onConnect(callback: () => void): void {\n    this.onConnectFn = callback;\n  }\n\n  onReceived(callback: (data: any) => void): void {\n    this.onReceivedFn = callback;\n  }\n\n  onError(callback: (error: any) => void): void {\n    this.onErrorFn = callback;\n  }\n\n  onClose(callback: () => void): void {\n    this.onCloseFn = callback;\n  }\n}\n","import { ConnectionProxy } from \"./types/ConnectionProxy\";\n\nexport class Connection {\n  constructor(private connectionProxy: ConnectionProxy) {}\n\n  connect(realm: string) {\n    this.connectionProxy.start(realm);\n  }\n\n  disconnect() {\n    this.connectionProxy.stop();\n  }\n\n  send(message: any): void {\n    this.connectionProxy.send(message);\n  }\n\n  onConnect(callback: () => void) {\n    this.connectionProxy.onConnect(callback);\n  }\n\n  onReceive(callback: (data: any) => void) {\n    this.connectionProxy.onReceived(callback);\n  }\n\n  onError(callback: (data: any) => void) {\n    this.connectionProxy.onError(callback);\n  }\n\n  onClose(callback: () => void) {\n    this.connectionProxy.onClose(callback);\n  }\n}\n","import { action } from \"ts-action\";\nimport { ActionUnion } from \"../redux/utils\";\n\nexport const AppActions = {\n  bootstrapApp: action(\"APP/BOOTSTRAP_APP\"),\n};\n\nexport type AllAppActions = ActionUnion<typeof AppActions>;\nexport type BoostrapApp = ReturnType<typeof AppActions.bootstrapApp>;\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\n\nconst refDataSelector = (state: RootState) => state.refData;\n\nexport const getCurrencyPairs = createSelector(\n  refDataSelector,\n  (refData) => refData.currencyPairs\n);\n","import { action } from \"ts-action\";\nimport { ActionUnion } from \"modules/redux/utils\";\n\nexport const RefDataActions = {\n  loadRefData: action(\"REF_DATA/LOAD_REF_DATA\"),\n  loadRefDataAck: action(\n    \"REF_DATA/LOAD_REF_DATA_ACK\",\n    (payload: { currencyPairs: string[] }) => ({ payload })\n  ),\n  loadRefDataNack: action(\"REF_DATA/LOAD_REF_DATA_NACK\"),\n};\n\nexport type AllRefDataActions = ActionUnion<typeof RefDataActions>;\nexport type LoadRefData = ReturnType<typeof RefDataActions.loadRefData>;\nexport type LoadRefDataAck = ReturnType<typeof RefDataActions.loadRefDataAck>;\nexport type LoadRefDataNack = ReturnType<typeof RefDataActions.loadRefDataNack>;\n","import { action } from \"ts-action\";\nimport { ActionUnion } from \"../redux/utils\";\n\nexport const SelectionActions = {\n  selectCurrencyPair: action(\n    \"SELECTION/SELECT_CURRENCY_PAIR\",\n    (payload: { currencyPair: string }) => ({ payload })\n  ),\n};\n\nexport type AllSelectionActions = ActionUnion<typeof SelectionActions>;\nexport type SelectCurrencyPair = ReturnType<\n  typeof SelectionActions.selectCurrencyPair\n>;\n","import { action } from \"ts-action\";\nimport { ActionUnion } from \"modules/redux/utils\";\nimport { ConnectionStatus } from \"./types/ConnectionStatus\";\nimport {\n  TradesChannel,\n  CandlesChannel,\n  TickerChannel,\n  BookChannel,\n} from \"./types/Channels\";\n\ninterface SubscribeToTrades {\n  channel: TradesChannel;\n  symbol: string;\n}\n\ninterface SubscribeToCandles {\n  channel: CandlesChannel;\n  key: string;\n}\n\ninterface SubscribeToTicker {\n  channel: TickerChannel;\n  symbol: string;\n}\n\ninterface SubscribeToBook {\n  channel: BookChannel;\n  symbol: string;\n  prec?: string;\n}\n\nexport interface InitActionPayload {\n  wsEndpoint: string;\n}\n\nexport type SubscribeToChannelActionPayload =\n  | SubscribeToTrades\n  | SubscribeToCandles\n  | SubscribeToTicker\n  | SubscribeToBook;\n\nexport const TransportActions = {\n  init: action(\"TRANSPORT/INIT\", (payload: { wsEndpoint: string }) => ({\n    payload,\n  })),\n  sendMessage: action(\"TRANSPORT/SEND_MESSAGE\", (payload: any) => ({\n    payload,\n  })),\n  receiveMessage: action(\n    \"TRANSPORT/RECEIVE_MESSAGE\",\n    (payload: any, meta: any) => ({\n      payload,\n      meta,\n    })\n  ),\n  changeConnectionStatus: action(\n    \"TRANSPORT/CHANGE_CONNECTION_STATUS\",\n    (payload: ConnectionStatus) => ({\n      payload,\n    })\n  ),\n  subscribeToChannel: action(\n    \"TRANSPORT/SUBSCRIBE_TO_CHANNEL\",\n    (payload: SubscribeToChannelActionPayload) => ({\n      payload,\n    })\n  ),\n  subscribeToChannelAck: action(\n    \"TRANSPORT/SUBSCRIBE_TO_CHANNEL_ACK\",\n    (payload: { channel: string; channelId: number; request: any }) => ({\n      payload,\n    })\n  ),\n  subscribeToChannelNack: action(\n    \"TRANSPORT/SUBSCRIBE_TO_CHANNEL_NACK\",\n    (payload: { error: string }) => ({\n      payload,\n    })\n  ),\n  unsubscribeFromChannel: action(\n    \"TRANSPORT/UNSUBSCRIBE_FROM_CHANNEL\",\n    (payload: { channelId: number }) => ({\n      payload,\n    })\n  ),\n  unsubscribeFromChannelAck: action(\n    \"TRANSPORT/UNSUBSCRIBE_FROM_CHANNEL_ACK\",\n    (payload: { channelId: number }) => ({\n      payload,\n    })\n  ),\n  unsubscribeFromChannelNack: action(\n    \"TRANSPORT/UNSUBSCRIBE_FROM_CHANNEL_NACK\",\n    (payload?: { channelId?: number }) => ({\n      payload,\n    })\n  ),\n\n  staleSubscription: action(\n    \"TRANSPORT/STALE_SUBSCRIPTION\",\n    (payload: { channelId: number }) => ({\n      payload,\n    })\n  ),\n};\n\nexport type AllTransportActions = ActionUnion<typeof TransportActions>;\nexport type Init = ReturnType<typeof TransportActions.init>;\nexport type ReceiveMessage = ReturnType<typeof TransportActions.receiveMessage>;\nexport type SendMessage = ReturnType<typeof TransportActions.sendMessage>;\nexport type ChangeConnectionStatus = ReturnType<\n  typeof TransportActions.changeConnectionStatus\n>;\nexport type SubscribeToChannel = ReturnType<\n  typeof TransportActions.subscribeToChannel\n>;\nexport type SubscribeToChannelAck = ReturnType<\n  typeof TransportActions.subscribeToChannelAck\n>;\nexport type SubscribeToChannelNack = ReturnType<\n  typeof TransportActions.subscribeToChannelNack\n>;\nexport type UnsubscribeFromChannel = ReturnType<\n  typeof TransportActions.unsubscribeFromChannel\n>;\nexport type UnsubscribeFromChannelAck = ReturnType<\n  typeof TransportActions.unsubscribeFromChannelAck\n>;\nexport type UnsubscribeFromChannelNack = ReturnType<\n  typeof TransportActions.unsubscribeFromChannelNack\n>;\nexport type StaleSubscription = ReturnType<\n  typeof TransportActions.staleSubscription\n>;\n","import { DateTime } from \"luxon\";\nimport numeral from \"numeral\";\nexport type Base = string;\nexport type Counter = string;\n\nexport function parseCurrencyPair(currencyPair: string): [Base, Counter] {\n  if (typeof currencyPair === \"undefined\") {\n    return [\"\", \"\"];\n  }\n  const base = currencyPair.slice(0, 3);\n  const counter = currencyPair.slice(3);\n  return [base, counter];\n}\n\nexport function formatCurrencyPair(currencyPair: string): string {\n  const [base, counter] = parseCurrencyPair(currencyPair);\n  return [base, counter].join(\" / \");\n}\n\nexport const formatPrice = (price: number | string | undefined) =>\n  numeral(price).format(\"0,0.00\");\n\nexport const formatAmount = (amount: number | string | undefined) =>\n  amount ? amount.toString() : \"\";\n\nexport const formatVolume = (volume: number) =>\n  numeral(volume).format(\"0.00 a\");\n\nexport const formatTime = (time: number) =>\n  DateTime.fromMillis(time).toLocaleString(DateTime.TIME_24_WITH_SECONDS);\n","import { action } from \"ts-action\";\nimport { ActionUnion } from \"../redux/utils\";\n\nexport interface SubscribeToTickerActionPayload {\n  symbol: string;\n}\n\nexport const TickerActions = {\n  subscribeToTicker: action(\n    \"TICKER/SUBSCRIBE_TO_TICKER\",\n    (payload: { symbol: string }) => ({ payload })\n  ),\n};\n\nexport type AllTickerActions = ActionUnion<typeof TickerActions>;\nexport type SubscribeToTicker = ReturnType<\n  typeof TickerActions.subscribeToTicker\n>;\n","import { action } from \"ts-action\";\nimport { ActionUnion } from \"../redux/utils\";\n\ntype Timeframe =\n  | \"1m\"\n  | \"5m\"\n  | \"15m\"\n  | \"30m\"\n  | \"1h\"\n  | \"3h\"\n  | \"6h\"\n  | \"12h\"\n  | \"1D\"\n  | \"7D\"\n  | \"14D\"\n  | \"1M\";\n\nexport const CandlesActions = {\n  subscribeToCandles: action(\n    \"CANDLES/SUBSCRIBE_TO_CANDLES\",\n    (payload: { symbol: string; timeframe: Timeframe }) => ({ payload })\n  ),\n  unsubscribeFromCandles: action(\n    \"CANDLES/UNSUBSCRIBE_FROM_CANDLES\",\n    (payload: { symbol: string; timeframe: Timeframe }) => ({ payload })\n  ),\n};\n\nexport type AllCandlesActions = ActionUnion<typeof CandlesActions>;\nexport type SubscribeToCandles = ReturnType<\n  typeof CandlesActions.subscribeToCandles\n>;\nexport type UnsubscribeFromCandles = ReturnType<\n  typeof CandlesActions.unsubscribeFromCandles\n>;\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\n\nconst selectionSelector = (state: RootState) => state.selection;\n\nexport const getSelectedCurrencyPair = createSelector(\n  selectionSelector,\n  (selection) => selection.currencyPair\n);\n","import { merge, of, from, EMPTY } from \"rxjs\";\nimport { Epic, combineEpics } from \"redux-observable\";\nimport {\n  switchMap,\n  take,\n  mergeMap,\n  filter,\n  map,\n  tap,\n  distinctUntilChanged,\n} from \"rxjs/operators\";\nimport { ofType } from \"ts-action-operators\";\nimport { Actions } from \"modules/root\";\nimport { AppActions } from \"modules/app/actions\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\nimport { getCurrencyPairs } from \"modules/reference-data/selectors\";\nimport { RefDataActions } from \"modules/reference-data/actions\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { SelectionActions } from \"modules/selection/actions\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { parseCurrencyPair } from \"modules/reference-data/utils\";\nimport { TickerActions } from \"modules/ticker/actions\";\nimport { CandlesActions } from \"modules/candles/actions\";\nimport { RootState } from \"./../root\";\nimport { getSelectedCurrencyPair } from \"./../selection/selectors\";\n\nconst bootstrap: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$,\n  state$\n) =>\n  action$.pipe(\n    ofType(AppActions.bootstrapApp),\n    switchMap(() => {\n      console.log(\"Bootstrap App\");\n\n      return merge(\n        action$.pipe(\n          ofType(TransportActions.changeConnectionStatus),\n          filter((action) => action.payload === ConnectionStatus.Connected),\n          switchMap(() =>\n            merge(\n              of(RefDataActions.loadRefData()),\n              action$.pipe(\n                ofType(RefDataActions.loadRefDataAck),\n                take(1),\n                mergeMap(() => {\n                  const currencyPairs = getCurrencyPairs(state$.value);\n                  const selectionActions = [\n                    SelectionActions.selectCurrencyPair({\n                      currencyPair:\n                        getSelectedCurrencyPair(state$.value) ||\n                        currencyPairs[0],\n                    }),\n                  ];\n\n                  const tickerActions = currencyPairs.map((currencyPair) =>\n                    TickerActions.subscribeToTicker({\n                      symbol: currencyPair,\n                    })\n                  );\n                  const candleActions = currencyPairs.map((currencyPair) =>\n                    CandlesActions.subscribeToCandles({\n                      symbol: currencyPair,\n                      timeframe: \"5m\",\n                    })\n                  );\n\n                  return merge(\n                    from(selectionActions),\n                    from(tickerActions),\n                    from(candleActions)\n                  );\n                })\n              )\n            )\n          )\n        ),\n        of(\n          TransportActions.init({\n            wsEndpoint: \"wss://api-pub.bitfinex.com/ws/2\",\n          })\n        )\n      );\n    })\n  );\n\nconst updateTitle: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$,\n  state$\n) =>\n  action$.pipe(\n    ofType(SelectionActions.selectCurrencyPair),\n    switchMap((action) => {\n      const { currencyPair } = action.payload;\n      const [, counter] = parseCurrencyPair(currencyPair);\n\n      return state$.pipe(\n        map((state) => state.ticker[currencyPair]),\n        distinctUntilChanged(),\n        filter((ticker) => typeof ticker !== \"undefined\"),\n        tap(\n          (ticker) =>\n            (document.title = `(${ticker.lastPrice?.toFixed(\n              2\n            )} ${counter})  Trade Interface`)\n        ),\n        mergeMap(() => EMPTY)\n      );\n    })\n  );\n\nexport default combineEpics(bootstrap, updateTitle);\n","import { EMPTY, merge, timer, Observable } from \"rxjs\";\nimport { ofType } from \"ts-action-operators\";\nimport { Epic, combineEpics } from \"redux-observable\";\nimport {\n  filter,\n  mergeMap,\n  catchError,\n  timeout,\n  take,\n  concatMap,\n  map,\n  bufferTime,\n  takeUntil,\n  switchMap,\n} from \"rxjs/operators\";\nimport { of } from \"rxjs/internal/observable/of\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { RootState, Actions } from \"modules/root\";\nimport { AppActions } from \"modules/app/actions\";\nimport {\n  ReceiveMessage,\n  TransportActions,\n  SubscribeToChannel,\n  UnsubscribeFromChannel,\n  ChangeConnectionStatus,\n} from \"./actions\";\nimport { ConnectionStatus } from \"./types/ConnectionStatus\";\n\nexport const SUBSCRIPTION_TIMEOUT_IN_MS = 5000;\nexport const HEARTBEAT_TIMEOUT_IN_MS = 20000;\nexport const RECONNECT_AFTER_MS = 1000;\n\nexport const handleSendMessage: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$, { connection }) =>\n  action$.pipe(\n    ofType(TransportActions.sendMessage),\n    mergeMap((action) => {\n      connection.send(JSON.stringify(action.payload));\n      return EMPTY;\n    })\n  );\n\nexport const init: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$,\n  state$,\n  { connection }\n) => {\n  return action$.pipe(\n    ofType(TransportActions.init),\n    take(1),\n    switchMap((action) => {\n      const { wsEndpoint } = action.payload;\n\n      connection.connect(wsEndpoint);\n\n      return new Observable<ReceiveMessage | ChangeConnectionStatus>(\n        (subscriber) => {\n          connection.onConnect(() => {\n            console.log(\"Connected\");\n\n            subscriber.next(\n              TransportActions.changeConnectionStatus(\n                ConnectionStatus.Connected\n              )\n            );\n          });\n          connection.onReceive((data) => {\n            const parsedData = JSON.parse(data);\n            let meta = undefined;\n            let channelId = undefined;\n\n            if (Array.isArray(parsedData)) {\n              channelId = parsedData[0];\n            } else if (parsedData.hasOwnProperty(\"chanId\")) {\n              channelId = parsedData.chanId;\n            }\n            if (channelId && state$.value.subscriptions[channelId]) {\n              meta = state$.value.subscriptions[channelId];\n            }\n            subscriber.next(TransportActions.receiveMessage(parsedData, meta));\n          });\n          connection.onClose(() => {\n            console.log(\"Disconnected\");\n\n            subscriber.next(\n              TransportActions.changeConnectionStatus(\n                ConnectionStatus.Disconnected\n              )\n            );\n          });\n        }\n      );\n    })\n  );\n};\n\n/*\n    The Bitfinex WS api appears to have some limitations when it comes to subscriptions.\n    Because requests/responses don't have a correlation id, we can't run concurrent requests safely.\n    Therefore, we queue subscription requests and process them sequencially.\n*/\nexport const handleSubscription: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$) => {\n  return action$.pipe(\n    ofType(\n      TransportActions.subscribeToChannel,\n      TransportActions.unsubscribeFromChannel\n    ),\n    concatMap((rootAction) => {\n      const isSubscribing =\n        rootAction.type === TransportActions.subscribeToChannel.type;\n\n      return merge(\n        action$.pipe(\n          ofType(TransportActions.receiveMessage),\n          filter((action) => {\n            return (\n              (isSubscribing &&\n                action.payload.event === \"subscribed\" &&\n                action.payload.channel ===\n                  (rootAction as SubscribeToChannel).payload.channel) ||\n              (!isSubscribing && action.payload.event === \"unsubscribed\") ||\n              action.payload.event === \"error\"\n            );\n          }),\n          take(1),\n          timeout(SUBSCRIPTION_TIMEOUT_IN_MS),\n          map((receiveMessageAction) => {\n            if (receiveMessageAction.payload.event === \"error\") {\n              return isSubscribing\n                ? TransportActions.subscribeToChannelNack({\n                    error: receiveMessageAction.payload.msg,\n                  })\n                : TransportActions.unsubscribeFromChannelNack();\n            } else {\n              const {\n                channel,\n                chanId: channelId,\n              } = receiveMessageAction.payload;\n\n              return isSubscribing\n                ? TransportActions.subscribeToChannelAck({\n                    channel,\n                    channelId,\n                    request: (rootAction as SubscribeToChannel).payload,\n                  })\n                : TransportActions.unsubscribeFromChannelAck({\n                    channelId,\n                  });\n            }\n          }),\n          catchError(() =>\n            isSubscribing\n              ? of(\n                  TransportActions.subscribeToChannelNack({\n                    error: \"Timeout\",\n                  })\n                )\n              : of(TransportActions.unsubscribeFromChannelNack())\n          )\n        ),\n        isSubscribing\n          ? of(\n              TransportActions.sendMessage({\n                event: \"subscribe\",\n                ...(rootAction as SubscribeToChannel).payload,\n              })\n            )\n          : of(\n              TransportActions.sendMessage({\n                event: \"unsubscribe\",\n                chanId: (rootAction as UnsubscribeFromChannel).payload\n                  .channelId,\n              })\n            )\n      );\n    })\n  );\n};\n\nexport const handleStaleSubscription: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$) => {\n  return action$.pipe(\n    ofType(TransportActions.subscribeToChannelAck),\n    mergeMap((subscribeAction) => {\n      const { channelId } = subscribeAction.payload;\n      return action$.pipe(\n        ofType(TransportActions.receiveMessage),\n        filter((action) => action.payload[0] === channelId),\n        map(() => null), // Discard action so we don't use memory unnecessarily\n        bufferTime(HEARTBEAT_TIMEOUT_IN_MS),\n        filter((actions) => actions.length === 0),\n        map(() => TransportActions.staleSubscription({ channelId })),\n        takeUntil(\n          merge(\n            action$.pipe(\n              ofType(TransportActions.unsubscribeFromChannel),\n              filter((action) => action.payload.channelId === channelId)\n            ),\n            action$.pipe(\n              ofType(TransportActions.changeConnectionStatus),\n              filter((action) => action.payload === ConnectionStatus.Connected)\n            )\n          )\n        )\n      );\n    })\n  );\n};\n\nexport const handleReconnection: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$) => {\n  return action$.pipe(\n    ofType(TransportActions.changeConnectionStatus),\n    filter((action) => action.payload === ConnectionStatus.Disconnected),\n    switchMap(() =>\n      timer(RECONNECT_AFTER_MS).pipe(map(() => AppActions.bootstrapApp()))\n    )\n  );\n};\n\nexport default combineEpics(\n  init,\n  handleSendMessage,\n  handleSubscription,\n  handleStaleSubscription,\n  handleReconnection\n);\n","import { action } from \"ts-action\";\nimport { ActionUnion } from \"../redux/utils\";\n\nexport const TradesActions = {\n  subscribeToTrades: action(\n    \"TRADES/SUBSCRIBE_TO_TRADES\",\n    (payload: { symbol: string }) => ({ payload })\n  ),\n  unsubscribeFromTrades: action(\n    \"TRADES/UNSUBSCRIBE_FROM_TRADES\",\n    (payload: { symbol: string }) => ({ payload })\n  ),\n};\n\nexport type AllTradesActions = ActionUnion<typeof TradesActions>;\nexport type SubscribeToTrades = ReturnType<\n  typeof TradesActions.subscribeToTrades\n>;\nexport type UnsubscribeFromTrades = ReturnType<\n  typeof TradesActions.unsubscribeFromTrades\n>;\n","import { memoize } from \"lodash\";\nimport { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\nimport { Channel } from \"./types/Channels\";\n\nconst subscriptionsSelector = (state: RootState) => state.subscriptions;\n\nexport const getSubscriptions = createSelector(\n  subscriptionsSelector,\n  (subscriptions) => subscriptions\n);\n\nexport const getSubscriptionId = createSelector(\n  getSubscriptions,\n  (subscriptions) =>\n    memoize(\n      (channel: Channel, request: { [key: string]: string } = {}) => {\n        const channelIds = Object.keys(subscriptions).map(Number);\n\n        return channelIds.find((channelId) => {\n          return (\n            subscriptions[channelId].channel === channel &&\n            Object.keys(request).every(\n              (key) => request[key] === subscriptions[channelId].request[key]\n            )\n          );\n        });\n      },\n      (channel: Channel, request: { [key: string]: string } = {}) => {\n        return [\n          channel,\n          ...Object.keys(request)\n            .sort()\n            .map((key) => `${key}=${request[key]}`),\n        ].join(\":\");\n      }\n    )\n);\n\nexport const getIsSubscriptionStale = createSelector(\n  getSubscriptions,\n  (subscriptions) => (subscriptionId: number) =>\n    Boolean(subscriptions[subscriptionId]?.isStale)\n);\n","import { from } from \"rxjs\";\nimport { ofType } from \"ts-action-operators\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { Epic, combineEpics } from \"redux-observable\";\nimport { RootState, Actions } from \"modules/root\";\nimport { TradesChannel } from \"core/transport/types/Channels\";\nimport { TradesActions } from \"modules/trades/actions\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { getSubscriptionId } from \"core/transport/selectors\";\nimport { Dependencies } from \"./../redux/store\";\n\nexport const subscribeToTrades: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$) =>\n  action$.pipe(\n    ofType(TradesActions.subscribeToTrades),\n    map((action) => {\n      const { symbol } = action.payload;\n      const msg = {\n        channel: \"trades\" as TradesChannel,\n        symbol: `t${symbol}`,\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport const unsubscribeFromTrades: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) =>\n  action$.pipe(\n    ofType(TradesActions.unsubscribeFromTrades),\n    mergeMap((action) => {\n      const { symbol } = action.payload;\n      const result: Actions[] = [];\n      const channelId = getSubscriptionId(state$.value)(\"trades\", {\n        symbol: `t${symbol}`,\n      });\n      if (typeof channelId !== \"undefined\") {\n        result.push(\n          TransportActions.unsubscribeFromChannel({\n            channelId,\n          })\n        );\n      } else {\n        console.warn(\"Failed to find trades subscription\");\n      }\n      return from(result);\n    })\n  );\n\nexport default combineEpics(subscribeToTrades, unsubscribeFromTrades);\n","import { Epic, combineEpics } from \"redux-observable\";\nimport { ofType } from \"ts-action-operators\";\nimport { switchMap, map, catchError } from \"rxjs/operators\";\nimport { fromFetch } from \"rxjs/fetch\";\nimport { of } from \"rxjs\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { RootState, Actions } from \"modules/root\";\nimport { RefDataActions } from \"./actions\";\n\nexport const loadRefData: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$\n) =>\n  action$.pipe(\n    ofType(RefDataActions.loadRefData),\n    switchMap(() => {\n      return fromFetch(\"data/currencyPairs.json\").pipe(\n        switchMap((response) => response.json()),\n        map((result) =>\n          RefDataActions.loadRefDataAck({\n            currencyPairs: result as string[],\n          })\n        ),\n        catchError(() => of(RefDataActions.loadRefDataNack()))\n      );\n    })\n  );\n\nexport default combineEpics(loadRefData);\n","import { map } from \"rxjs/operators\";\nimport { Epic, combineEpics } from \"redux-observable\";\nimport { ofType } from \"ts-action-operators\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { TickerChannel } from \"core/transport/types/Channels\";\nimport { RootState, Actions } from \"modules/root\";\nimport { TickerActions } from \"./actions\";\nimport { Dependencies } from \"./../redux/store\";\n\nexport const subscribeToTicker: Epic<\n  Actions,\n  Actions,\n  RootState | undefined,\n  Dependencies | undefined\n> = (action$) =>\n  action$.pipe(\n    ofType(TickerActions.subscribeToTicker),\n    map((action) => {\n      const { symbol } = action.payload;\n      const msg = {\n        channel: \"ticker\" as TickerChannel,\n        symbol: `t${symbol}`,\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport default combineEpics(subscribeToTicker);\n","import { from } from \"rxjs\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { ofType } from \"ts-action-operators\";\nimport { Epic, combineEpics } from \"redux-observable\";\nimport { RootState, Actions } from \"modules/root\";\nimport { getSubscriptionId } from \"core/transport/selectors\";\nimport { CandlesChannel } from \"core/transport/types/Channels\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { CandlesActions } from \"./actions\";\nimport { Dependencies } from \"./../redux/store\";\n\nexport const subscribeToCandles: Epic<\n  Actions,\n  Actions,\n  RootState | undefined,\n  Dependencies | undefined\n> = (action$) =>\n  action$.pipe(\n    ofType(CandlesActions.subscribeToCandles),\n    map((action) => {\n      const { symbol, timeframe } = action.payload;\n      const msg = {\n        channel: \"candles\" as CandlesChannel,\n        key: [\"trade\", timeframe, `t${symbol}`].join(\":\"),\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport const unsubscribeFromCandles: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) =>\n  action$.pipe(\n    ofType(CandlesActions.unsubscribeFromCandles),\n    mergeMap((action) => {\n      const { symbol, timeframe } = action.payload;\n      const result: Actions[] = [];\n\n      const channelId = getSubscriptionId(state$.value)(\"candles\", {\n        key: [\"trade\", timeframe, `t${symbol}`].join(\":\"),\n      });\n      if (typeof channelId !== \"undefined\") {\n        result.push(\n          TransportActions.unsubscribeFromChannel({\n            channelId,\n          })\n        );\n      } else {\n        console.warn(\"Failed to find candles subscription\");\n      }\n      return from(result);\n    })\n  );\n\nexport default combineEpics(subscribeToCandles, unsubscribeFromCandles);\n","import { action } from \"ts-action\";\nimport { ActionUnion } from \"../redux/utils\";\n\nexport const BookActions = {\n  subscribeToBook: action(\n    \"BOOK/SUBSCRIBE_TO_BOOK\",\n    (payload: { symbol: string }) => ({ payload })\n  ),\n  unsubscribeFromBook: action(\n    \"BOOK/UNSUBSCRIBE_FROM_BOOK\",\n    (payload: { symbol: string }) => ({ payload })\n  ),\n};\n\nexport type AllBookActions = ActionUnion<typeof BookActions>;\nexport type SubscribeToBook = ReturnType<typeof BookActions.subscribeToBook>;\nexport type UnsubscribeFromBook = ReturnType<\n  typeof BookActions.unsubscribeFromBook\n>;\n","import { from } from \"rxjs\";\nimport { Epic, combineEpics } from \"redux-observable\";\nimport { ofType } from \"ts-action-operators\";\nimport { switchMap, pairwise, withLatestFrom } from \"rxjs/operators\";\nimport { Actions } from \"modules/root\";\nimport { TradesActions } from \"modules/trades/actions\";\nimport { CandlesActions } from \"modules/candles/actions\";\nimport { BookActions } from \"modules/book/actions\";\nimport { RootState } from \"./../root\";\nimport { Dependencies } from \"./../redux/store\";\nimport { SelectionActions } from \"./actions\";\nimport { getSelectedCurrencyPair } from \"./selectors\";\n\nexport const handleSelection: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) => {\n  const statePairs$ = state$.pipe(pairwise());\n  return action$.pipe(\n    ofType(SelectionActions.selectCurrencyPair),\n    withLatestFrom(statePairs$),\n    switchMap(([action, [oldState, newState]]) => {\n      const oldCurrencyPair = getSelectedCurrencyPair(oldState);\n      const { currencyPair } = action.payload;\n      const unsubscribeActions = [];\n      if (oldCurrencyPair) {\n        unsubscribeActions.push(\n          CandlesActions.unsubscribeFromCandles({\n            symbol: oldCurrencyPair,\n            timeframe: \"1m\",\n          }),\n          BookActions.unsubscribeFromBook({ symbol: oldCurrencyPair }),\n          TradesActions.unsubscribeFromTrades({ symbol: oldCurrencyPair })\n        );\n      }\n\n      const subscribeActions = [\n        CandlesActions.subscribeToCandles({\n          symbol: currencyPair,\n          timeframe: \"1m\",\n        }),\n        BookActions.subscribeToBook({ symbol: currencyPair }),\n        TradesActions.subscribeToTrades({ symbol: currencyPair }),\n      ];\n\n      return from([...unsubscribeActions, ...subscribeActions]);\n    })\n  );\n};\n\nexport default combineEpics(handleSelection);\n","import { from } from \"rxjs\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport { ofType } from \"ts-action-operators\";\nimport { Epic, combineEpics } from \"redux-observable\";\nimport { getSubscriptionId } from \"core/transport/selectors\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { BookChannel } from \"core/transport/types/Channels\";\nimport { RootState, Actions } from \"modules/root\";\nimport { BookActions } from \"./actions\";\nimport { Dependencies } from \"./../redux/store\";\n\nexport const subscribeToBook: Epic<\n  Actions,\n  Actions,\n  RootState | undefined,\n  Dependencies | undefined\n> = (action$) =>\n  action$.pipe(\n    ofType(BookActions.subscribeToBook),\n    map((action) => {\n      const { symbol } = action.payload;\n      const msg = {\n        channel: \"book\" as BookChannel,\n        symbol: `t${symbol}`,\n        prec: \"R0\",\n      };\n      return TransportActions.subscribeToChannel(msg);\n    })\n  );\n\nexport const unsubscribeFromBook: Epic<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n> = (action$, state$) =>\n  action$.pipe(\n    ofType(BookActions.unsubscribeFromBook),\n    mergeMap((action) => {\n      const { symbol } = action.payload;\n      const result: Actions[] = [];\n      const channelId = getSubscriptionId(state$.value)(\"book\", {\n        symbol: `t${symbol}`,\n      });\n      if (typeof channelId !== \"undefined\") {\n        result.push(\n          TransportActions.unsubscribeFromChannel({\n            channelId,\n          })\n        );\n      } else {\n        console.warn(\"Failed to find book subscription\");\n      }\n      return from(result);\n    })\n  );\n\nexport default combineEpics(subscribeToBook, unsubscribeFromBook);\n","import { action } from \"ts-action\";\nimport { ActionUnion } from \"../redux/utils\";\n\nexport const PingActions = {\n  updateLatency: action(\n    \"PING/UPDATE_LATENCY\",\n    (payload: { latency: number }) => ({ payload })\n  ),\n};\n\nexport type AllPingActions = ActionUnion<typeof PingActions>;\nexport type UpdateLatency = ReturnType<typeof PingActions.updateLatency>;\n","import { combineEpics, Epic } from \"redux-observable\";\nimport { ofType } from \"ts-action-operators\";\nimport { interval, merge, of } from \"rxjs\";\nimport {\n  filter,\n  switchMap,\n  map,\n  timeout,\n  catchError,\n  take,\n} from \"rxjs/operators\";\nimport { PingActions } from \"./actions\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { Actions, RootState } from \"modules/root\";\nimport { Dependencies } from \"modules/redux/store\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\n\nexport const PING_INTERVAL_IN_MS = 5000;\n\nexport const pingPong: Epic<Actions, Actions, RootState, Dependencies> = (\n  action$\n) =>\n  action$.pipe(\n    ofType(TransportActions.changeConnectionStatus),\n    filter((action) => action.payload === ConnectionStatus.Connected),\n    switchMap(() => {\n      return interval(PING_INTERVAL_IN_MS).pipe(\n        switchMap((i) => {\n          const cid = i + 1;\n          const pingTimestamp = Date.now();\n          return merge(\n            action$.pipe(\n              ofType(TransportActions.receiveMessage),\n              filter(\n                (action) =>\n                  !Array.isArray(action.payload) &&\n                  action.payload.event === \"pong\" &&\n                  action.payload.cid === cid\n              ),\n              take(1),\n              timeout(PING_INTERVAL_IN_MS - 100),\n              map(() =>\n                PingActions.updateLatency({\n                  latency: Date.now() - pingTimestamp,\n                })\n              ),\n              catchError(() =>\n                of(\n                  PingActions.updateLatency({\n                    latency: -1,\n                  })\n                )\n              )\n            ),\n            of(\n              TransportActions.sendMessage({\n                event: \"ping\",\n                cid,\n              })\n            )\n          );\n        })\n      );\n    })\n  );\n\nexport default combineEpics(pingPong);\n","import { ReceiveMessage } from \"./actions\";\n\nexport function isHeartbeat(action: ReceiveMessage) {\n  return Array.isArray(action.payload) && action.payload[1] === \"hb\";\n}\n\nexport function isSubscriptionMessage(action: ReceiveMessage) {\n  return action.payload.event === \"subscribed\";\n}\n\nexport function isUnsubscriptionMessage(action: ReceiveMessage) {\n  return action.payload.event === \"unsubscribed\";\n}\n\nexport function isErrorMessage(action: ReceiveMessage) {\n  return action.payload.event === \"error\";\n}\n","import { reducer, on } from \"ts-action\";\nimport { TransportActions } from \"core/transport/actions\";\nimport {\n  isHeartbeat,\n  isSubscriptionMessage,\n  isUnsubscriptionMessage,\n  isErrorMessage,\n} from \"core/transport/utils\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\nimport { ReceiveMessage } from \"core/transport/actions\";\nimport { Trade } from \"./types/Trade\";\n\ntype SymbolState = Trade[];\n\nexport const MAX_TRADES = 100;\n\nexport interface TradesState {\n  [currencyPair: string]: SymbolState;\n}\n\nconst initialState: TradesState = {};\n\nfunction snapshotReducer(state: SymbolState, action: ReceiveMessage) {\n  const [, trades] = action.payload;\n  return trades\n    .sort((a: number[], b: number[]) => b[1] - a[1])\n    .map(([id, timestamp, amount, price]: number[]) => ({\n      id,\n      timestamp,\n      amount,\n      price,\n    }));\n}\n\nfunction updateReducer(state: SymbolState = [], action: ReceiveMessage) {\n  const [, , trade] = action.payload;\n  const [id, timestamp, amount, price] = trade;\n  const existingTradeIndex = state.findIndex((x) => x.id === id);\n  const newOrUpdatedTrade = {\n    id,\n    timestamp,\n    amount,\n    price,\n  };\n\n  if (existingTradeIndex >= 0) {\n    const updatedState = state.slice();\n    updatedState.splice(existingTradeIndex, 1, newOrUpdatedTrade);\n    return updatedState;\n  } else {\n    return [newOrUpdatedTrade, ...state];\n  }\n}\n\nexport const tradesReducer = reducer(\n  initialState,\n  on(TransportActions.changeConnectionStatus, (state, action) => {\n    if (action.payload === ConnectionStatus.Connected) {\n      return initialState;\n    }\n    return state;\n  }),\n  on(TransportActions.receiveMessage, (state, action) => {\n    if (\n      isHeartbeat(action) ||\n      isSubscriptionMessage(action) ||\n      isErrorMessage(action)\n    ) {\n      return state;\n    }\n\n    const { channel, request } = action.meta || {};\n    if (channel === \"trades\") {\n      const { symbol } = request;\n      const currencyPair = symbol.slice(1);\n      if (isUnsubscriptionMessage(action)) {\n        const updatedState = {\n          ...state,\n        };\n        delete updatedState[currencyPair];\n        return updatedState;\n      }\n\n      const symbolReducer = Array.isArray(action.payload[1])\n        ? snapshotReducer\n        : updateReducer;\n      const result = symbolReducer(state[currencyPair], action);\n\n      return {\n        ...state,\n        [currencyPair]: result.slice(0, MAX_TRADES), // only keep the top x trades, so we don't eventually fill up the memory\n      };\n    }\n\n    return state;\n  })\n);\n\nexport default tradesReducer;\n","import { on, reducer } from \"ts-action\";\nimport { isHeartbeat } from \"core/transport/utils\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { ConnectionStatus } from \"./types/ConnectionStatus\";\n\nexport interface SubscriptionState {\n  [key: number]: { channel: string; request: any; isStale?: boolean };\n}\n\nconst initialState: SubscriptionState = {};\n\nexport const subscriptionsReducer = reducer(\n  initialState,\n  on(TransportActions.changeConnectionStatus, (state, action) => {\n    if (action.payload === ConnectionStatus.Connected) {\n      return initialState;\n    }\n    return state;\n  }),\n  on(TransportActions.subscribeToChannelAck, (state, action) => {\n    const { request, channel, channelId } = action.payload;\n\n    return {\n      ...state,\n      [channelId]: {\n        channel,\n        request,\n      },\n    };\n  }),\n  on(TransportActions.unsubscribeFromChannelAck, (state, action) => {\n    const { channelId } = action.payload;\n\n    const updatedState = {\n      ...state,\n    };\n    delete updatedState[channelId];\n    return updatedState;\n  }),\n  on(TransportActions.receiveMessage, (state, action) => {\n    if (isHeartbeat(action)) {\n      const [channelId] = action.payload;\n\n      if (!Boolean(state[channelId].isStale)) {\n        return state;\n      }\n\n      return {\n        ...state,\n        [channelId]: {\n          ...state[channelId],\n          isStale: false,\n        },\n      };\n    }\n    return state;\n  }),\n  on(TransportActions.staleSubscription, (state, action) => {\n    const { channelId } = action.payload;\n\n    return {\n      ...state,\n      [channelId]: {\n        ...state[channelId],\n        isStale: true,\n      },\n    };\n  })\n);\n\nexport default subscriptionsReducer;\n","import { reducer, on } from \"ts-action\";\nimport { RefDataActions } from \"./actions\";\n\ninterface RefDataState {\n  currencyPairs: string[];\n}\n\nconst initialState: RefDataState = {\n  currencyPairs: [],\n};\n\nexport const refDataReducer = reducer(\n  initialState,\n  on(RefDataActions.loadRefDataAck, (state, action) => {\n    const { currencyPairs } = action.payload;\n\n    return {\n      ...state,\n      currencyPairs,\n    };\n  })\n);\n\nexport default refDataReducer;\n","import { reducer, on } from \"ts-action\";\nimport { TransportActions } from \"core/transport/actions\";\nimport { isHeartbeat } from \"core/transport/utils\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\nimport { Ticker } from \"./types/Ticker\";\n\nexport interface TickerState {\n  [symbol: string]: Ticker;\n}\n\nconst initialState: TickerState = {};\n\nexport const tickerReducer = reducer(\n  initialState,\n  on(TransportActions.changeConnectionStatus, (state, action) => {\n    if (action.payload === ConnectionStatus.Connected) {\n      return initialState;\n    }\n    return state;\n  }),\n  on(TransportActions.receiveMessage, (state, action) => {\n    if (isHeartbeat(action)) {\n      return state;\n    }\n\n    const { channel, request } = action.meta || {};\n    if (channel === \"ticker\") {\n      const { symbol } = request;\n      const currencyPair = symbol.slice(1);\n      const [\n        ,\n        [\n          bid,\n          bidSize,\n          ask,\n          askSize,\n          dailyChange,\n          dailyChangeRelative,\n          lastPrice,\n          volume,\n          high,\n          low,\n        ],\n      ] = action.payload;\n\n      return {\n        ...state,\n        [currencyPair]: {\n          currencyPair,\n          bid,\n          bidSize,\n          ask,\n          askSize,\n          dailyChange,\n          dailyChangeRelative,\n          lastPrice,\n          volume,\n          high,\n          low,\n        },\n      };\n    }\n\n    return state;\n  })\n);\n\nexport default tickerReducer;\n","export const getLookupKey = (currencyPair: string, timeframe: string) =>\n  [currencyPair, timeframe].join(\":\");\n","import { reducer, on } from \"ts-action\";\nimport { TransportActions } from \"core/transport/actions\";\nimport {\n  isHeartbeat,\n  isSubscriptionMessage,\n  isUnsubscriptionMessage,\n  isErrorMessage,\n} from \"core/transport/utils\";\nimport { ReceiveMessage } from \"core/transport/actions\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\nimport { getLookupKey } from \"./utils\";\nimport { Candle } from \"./types/Candle\";\n\nconst MAX_CANDLES = 100;\n\ntype SymbolState = Candle[];\n\nexport interface CandlesState {\n  [currencyPair: string]: SymbolState;\n}\n\nconst initialState: CandlesState = {};\n\nfunction snapshotReducer(state: SymbolState, action: ReceiveMessage) {\n  const [, candles] = action.payload;\n  return candles\n    .map(([timestamp, open, close, high, low, volume]: number[]) => ({\n      timestamp,\n      open,\n      close,\n      high,\n      low,\n      volume,\n    }))\n    .sort((a: Candle, b: Candle) => b.timestamp - a.timestamp);\n}\n\nfunction updateReducer(state: SymbolState = [], action: ReceiveMessage) {\n  const [, candle] = action.payload;\n  const [timestamp, open, close, high, low, volume] = candle;\n  const candleIndex = state.findIndex((c) => c.timestamp === timestamp);\n  const newOrUpdatedCandle = {\n    timestamp,\n    open,\n    close,\n    high,\n    low,\n    volume,\n  };\n\n  if (candleIndex >= 0) {\n    const updatedState = state.slice();\n    updatedState.splice(candleIndex, 1, newOrUpdatedCandle);\n    return updatedState;\n  }\n  return [newOrUpdatedCandle, ...state];\n}\n\nexport const candlesReducer = reducer(\n  initialState,\n  on(TransportActions.changeConnectionStatus, (state, action) => {\n    if (action.payload === ConnectionStatus.Connected) {\n      return initialState;\n    }\n    return state;\n  }),\n  on(TransportActions.receiveMessage, (state, action) => {\n    if (\n      isHeartbeat(action) ||\n      isSubscriptionMessage(action) ||\n      isErrorMessage(action)\n    ) {\n      return state;\n    }\n\n    const { channel, request } = action.meta || {};\n    if (channel === \"candles\") {\n      const { key } = request;\n      const [, timeframe, symbol] = key.split(\":\");\n      const currencyPair = symbol.slice(1);\n      const lookupKey = getLookupKey(currencyPair, timeframe);\n\n      if (isUnsubscriptionMessage(action)) {\n        const updatedState = {\n          ...state,\n        };\n        delete updatedState[lookupKey];\n        return updatedState;\n      }\n\n      const symbolReducer = Array.isArray(action.payload[1][0])\n        ? snapshotReducer\n        : updateReducer;\n      const result = symbolReducer(state[lookupKey], action);\n\n      return {\n        ...state,\n        [lookupKey]: result.slice(0, MAX_CANDLES), // restrict number of candles so we don't eventully fill up the memory\n      };\n    }\n\n    return state;\n  })\n);\n\nexport default candlesReducer;\n","import { reducer, on } from \"ts-action\";\nimport { SelectionActions } from \"./actions\";\n\ninterface SelectionState {\n  currencyPair?: string;\n}\n\nconst initialState: SelectionState = {};\n\nexport const selectionReducer = reducer(\n  initialState,\n  on(SelectionActions.selectCurrencyPair, (state, action) => {\n    const { currencyPair } = action.payload;\n\n    return {\n      ...state,\n      currencyPair,\n    };\n  })\n);\n\nexport default selectionReducer;\n","import { reducer, on } from \"ts-action\";\nimport { ConnectionStatus } from \"core/transport/types/ConnectionStatus\";\nimport { TransportActions } from \"core/transport/actions\";\nimport {\n  isHeartbeat,\n  isSubscriptionMessage,\n  isUnsubscriptionMessage,\n  isErrorMessage,\n} from \"core/transport/utils\";\nimport { ReceiveMessage } from \"core/transport/actions\";\nimport { Order } from \"./types/Order\";\n\ntype SymbolState = Order[];\n\nexport interface BookState {\n  [currencyPair: string]: SymbolState;\n}\n\nconst initialState: BookState = {};\n\nfunction snapshotReducer(state: SymbolState, action: ReceiveMessage) {\n  const [, orders] = action.payload;\n  return orders.map(([id, price, amount]: any[]) => ({\n    id,\n    price,\n    amount,\n  }));\n}\n\nfunction updateReducer(state: SymbolState = [], action: ReceiveMessage) {\n  const [, order] = action.payload;\n  const [id, price, amount] = order;\n  const existingOrderIndex = state.findIndex((x) => x.id === id);\n  const newOrUpdatedOrder = {\n    id,\n    price,\n    amount,\n  };\n\n  if (price === 0 && existingOrderIndex >= 0) {\n    // remove\n    const updatedState = state.slice();\n    updatedState.splice(existingOrderIndex, 1);\n    return updatedState;\n  } else if (existingOrderIndex >= 0) {\n    // update\n    const updatedState = state.slice();\n    updatedState.splice(existingOrderIndex, 1, newOrUpdatedOrder);\n    return updatedState;\n  } else {\n    // add\n    return [...state, newOrUpdatedOrder];\n  }\n}\n\nexport const bookReducer = reducer(\n  initialState,\n  on(TransportActions.changeConnectionStatus, (state, action) => {\n    if (action.payload === ConnectionStatus.Connected) {\n      return initialState;\n    }\n    return state;\n  }),\n  on(TransportActions.receiveMessage, (state, action) => {\n    if (\n      isHeartbeat(action) ||\n      isSubscriptionMessage(action) ||\n      isErrorMessage(action)\n    ) {\n      return state;\n    }\n\n    const { channel, request } = action.meta || {};\n\n    if (channel === \"book\") {\n      const { symbol } = request;\n      const currencyPair = symbol.slice(1);\n\n      if (isUnsubscriptionMessage(action)) {\n        const updatedState = {\n          ...state,\n        };\n        delete updatedState[currencyPair];\n        return updatedState;\n      }\n\n      const symbolReducer = Array.isArray(action.payload[1][0])\n        ? snapshotReducer\n        : updateReducer;\n      const result = symbolReducer(state[currencyPair], action);\n      return {\n        ...state,\n        [currencyPair]: result,\n      };\n    }\n\n    return state;\n  })\n);\n\nexport default bookReducer;\n","import { reducer, on } from \"ts-action\";\nimport { PingActions } from \"./actions\";\n\ninterface PingState {\n  latency?: number;\n}\n\nconst initialState: PingState = {\n  latency: undefined,\n};\n\nexport const pingReducer = reducer(\n  initialState,\n  on(PingActions.updateLatency, (state, action) => {\n    const { latency } = action.payload;\n\n    return {\n      ...state,\n      latency,\n    };\n  })\n);\n\nexport default pingReducer;\n","import { combineEpics } from \"redux-observable\";\nimport { combineReducers } from \"redux\";\nimport { AllBookActions } from \"./book/actions\";\nimport { AllSelectionActions } from \"./selection/actions\";\nimport { AllCandlesActions } from \"./candles/actions\";\nimport { AllTickerActions } from \"./ticker/actions\";\nimport { AllRefDataActions } from \"./reference-data/actions\";\nimport { AllPingActions } from \"./ping/actions\";\nimport appEpics from \"./app/epics\";\nimport transportEpics from \"../core/transport/epics\";\nimport tradeEpics from \"./trades/epics\";\nimport refDataEpics from \"./reference-data/epics\";\nimport tickerEpics from \"./ticker/epics\";\nimport candlesEpics from \"./candles/epics\";\nimport selectionEpics from \"./selection/epics\";\nimport bookEpics from \"./book/epics\";\nimport pingEpics from \"./ping/epics\";\nimport { AllAppActions } from \"./app/actions\";\nimport { AllTradesActions } from \"./trades/actions\";\nimport { AllTransportActions } from \"core/transport/actions\";\nimport { tradesReducer } from \"./trades/reducer\";\nimport { subscriptionsReducer } from \"core/transport/reducer\";\nimport { refDataReducer } from \"./reference-data/reducer\";\nimport { tickerReducer } from \"./ticker/reducer\";\nimport { candlesReducer } from \"./candles/reducer\";\nimport { selectionReducer } from \"./selection/reducer\";\nimport { bookReducer } from \"./book/reducer\";\nimport { pingReducer } from \"./ping/reducer\";\n\nexport const rootEpic = combineEpics(\n  appEpics,\n  refDataEpics,\n  transportEpics,\n  tradeEpics,\n  tickerEpics,\n  candlesEpics,\n  selectionEpics,\n  bookEpics,\n  pingEpics\n);\n\nexport const rootReducer = combineReducers({\n  refData: refDataReducer,\n  subscriptions: subscriptionsReducer,\n  trades: tradesReducer,\n  ticker: tickerReducer,\n  candles: candlesReducer,\n  selection: selectionReducer,\n  book: bookReducer,\n  ping: pingReducer,\n});\n\nexport type Actions =\n  | AllAppActions\n  | AllRefDataActions\n  | AllTransportActions\n  | AllTradesActions\n  | AllTickerActions\n  | AllCandlesActions\n  | AllSelectionActions\n  | AllBookActions\n  | AllPingActions;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { WsConnectionProxy } from \"core/transport/WsConnectionProxy\";\nimport { Connection } from \"core/transport/Connection\";\nimport { Actions, RootState, rootEpic, rootReducer } from \"../root\";\n\nconst connectionProxy = new WsConnectionProxy();\nconst connection = new Connection(connectionProxy);\n\nconst dependencies = {\n  connection,\n};\n\nexport type Dependencies = typeof dependencies;\n\nconst epicMiddleware = createEpicMiddleware<\n  Actions,\n  Actions,\n  RootState,\n  Dependencies\n>({\n  dependencies,\n});\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(epicMiddleware))\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n","import { useMemo, useEffect, useState } from \"react\";\nimport { throttle } from \"lodash\";\n\nexport const useThrottleFn = <T extends (...args: any) => any>(\n  fn: T,\n  ms = 1000\n) => {\n  const throttledFn = useMemo(() => {\n    return throttle(fn, ms);\n  }, [fn, ms]);\n\n  // fn may call setState.\n  useEffect(() => {\n    return () => {\n      throttledFn.cancel();\n    };\n  }, [throttledFn]);\n  return throttledFn;\n};\n\nexport const useThrottle = <T>(value: T, ms = 1000) => {\n  const [throttledValue, setThrottledValue] = useState(value);\n  const throttleFn = useThrottleFn(setThrottledValue, ms);\n  throttleFn(value);\n  return throttledValue;\n};\n","import {\n  formatPrice,\n  formatAmount,\n  formatVolume,\n  formatTime,\n} from \"modules/reference-data/utils\";\n\nexport const priceFormatter = (params: { value: number }) =>\n  formatPrice(params.value);\n\nexport const amountFormatter = (params: { value: number }) =>\n  formatAmount(params.value);\n\nexport const volumeFormatter = (params: { value: number }) =>\n  formatVolume(params.value);\n\nexport const timeFormatter = (params: { value: number }) =>\n  formatTime(params.value);\n","import { useEffect } from \"react\";\nimport { GridApi } from \"ag-grid-community\";\nimport { debounce } from \"lodash\";\n\nconst DEBOUNCE_RESIZE_IN_MS = 200;\n\nexport const useGridResize = (gridApi?: GridApi) => {\n  useEffect(() => {\n    if (gridApi) {\n      gridApi.sizeColumnsToFit();\n    }\n\n    const handleResize = debounce(() => {\n      if (gridApi) {\n        gridApi.sizeColumnsToFit();\n      }\n    }, DEBOUNCE_RESIZE_IN_MS);\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [gridApi]);\n};\n","const Palette = {\n  Bid: \"#00AD08\",\n  Ask: \"#FF264D\",\n  BidTransparent: \"rgba(0, 173, 8, 0.2)\",\n  AskTransparent: \"rgba(255, 38, 77, 0.2)\",\n  Positive: \"#00AD08\",\n  Negative: \"#FF264D\",\n  Orange: \"#FFA41B\",\n  White: \"#FFF\",\n  BackgroundColor: \"#222\",\n  Label: \"rgba(245, 245, 245, 0.64)\",\n  Border: \"#424242\",\n  LightGray: \"rgba(245, 245, 245, 0.64)\",\n  DarkGray: \"#63666D\",\n};\n\nexport default Palette;\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nconst barWidth = 5;\nconst barHeight = 20;\nconst gap = 2;\n\nconst animation = `\n    background: ${Palette.LightGray};\n    animation: loadingAnimation 1s infinite ease-in-out;\n    width: ${barWidth}px;\n    height: ${barHeight}px;\n`;\n\nexport const Container = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  z-index: 1;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 1fr;\n  grid-template-areas:\n    \"icon\"\n    \"title\";\n\n  justify-items: center;\n`;\n\nexport const Title = styled.div`\n  font-size: 11px;\n  font-family: FiraSans-Light;\n  grid-area: title;\n  align-self: flex-start;\n  color: ${Palette.LightGray};\n`;\n\nexport const Animation = styled.div`\n  position: relative;\n  grid-area: icon;\n  align-self: flex-end;\n  margin-bottom: 5px;\n\n  @keyframes loadingAnimation {\n    0%,\n    80%,\n    100% {\n      box-shadow: 0 0 ${Palette.LightGray};\n      height: ${barHeight}px;\n    }\n    40% {\n      box-shadow: 0 -${barWidth}px ${Palette.LightGray};\n      height: ${barHeight * 1.2}px;\n    }\n  }\n\n  ${animation};\n\n  &:before,\n  &:after {\n    position: absolute;\n    content: \"\";\n    ${animation}\n  }\n\n  &:before {\n    left: ${-barWidth - gap}px;\n    animation-delay: -0.2s;\n  }\n\n  &:after {\n    left: ${barWidth + gap}px;\n    animation-delay: 0.2s;\n  }\n`;\n","import Loading from \"./Loading\";\n\nexport default Loading;\n","import React, { FC } from \"react\";\nimport { Container, Title, Animation } from \"./Loading.styled\";\n\ninterface Props {\n  title?: string;\n}\n\nconst Loading: FC<Props> = (props) => {\n  const { title = \"Loading...\" } = props;\n  return (\n    <Container>\n      <Animation></Animation>\n      <Title>{title}</Title>\n    </Container>\n  );\n};\n\nexport default Loading;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  font-family: FiraSans-Light;\n  position: relative;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(34, 34, 34, 0.7);\n  pointer-events: none;\n  z-index: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import Stale from \"./Stale\";\n\nexport default Stale;\n","import React, { FC } from \"react\";\nimport Loading from \"core/components/Loading\";\nimport { Container } from \"./Stale.styled\";\n\nconst Stale: FC<{}> = () => {\n  return (\n    <Container>\n      <Loading title={\"Stale...\"}></Loading>\n    </Container>\n  );\n};\n\nexport default Stale;\n","import React, { FC, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ColDef, GridApi } from \"ag-grid-community\";\nimport { useThrottle } from \"core/hooks/useThrottle\";\nimport {\n  priceFormatter,\n  amountFormatter,\n  timeFormatter,\n} from \"modules/ag-grid/formatter\";\nimport { useGridResize } from \"core/hooks/useGridResize\";\nimport Loading from \"core/components/Loading\";\nimport { Trade } from \"../../types/Trade\";\nimport { Container } from \"./Trades.styled\";\nimport Palette from \"theme/style\";\nimport Stale from \"core/components/Stale\";\n\nexport interface Props {\n  trades: Trade[];\n  isStale: boolean;\n}\n\nconst Trades: FC<Props> = (props) => {\n  const { trades, isStale } = props;\n  const throttledTrades = useThrottle<Trade[]>(trades, 500);\n  const [gridApi, setGridApi] = useState<GridApi | undefined>();\n\n  const columnDefs: ColDef[] = [\n    {\n      headerName: \"Id\",\n      field: \"id\",\n      hide: true,\n    },\n    {\n      headerName: \"Amount\",\n      field: \"amount\",\n      valueFormatter: (params) =>\n        amountFormatter({ value: Math.abs(params.value) }),\n    },\n    {\n      headerName: \"Price\",\n      field: \"price\",\n      cellStyle: (params) => {\n        return {\n          color: params.value < 0 ? Palette.Ask : Palette.Bid,\n        };\n      },\n      valueFormatter: priceFormatter,\n    },\n    {\n      headerName: \"Time\",\n      field: \"timestamp\",\n      valueFormatter: timeFormatter,\n      cellStyle: () => ({\n        color: Palette.LightGray,\n      }),\n    },\n  ];\n\n  useGridResize(gridApi);\n\n  return (\n    <Container className=\"ag-theme-balham-dark\">\n      {isStale && <Stale />}\n      <AgGridReact\n        columnDefs={columnDefs}\n        rowData={throttledTrades}\n        deltaRowDataMode={true}\n        getRowNodeId={(data) => data.id}\n        onGridReady={(event) => {\n          setGridApi(event.api);\n        }}\n        noRowsOverlayComponent={\"customLoadingOverlay\"}\n        frameworkComponents={{\n          customLoadingOverlay: Loading,\n        }}\n      ></AgGridReact>\n    </Container>\n  );\n};\n\nexport default Trades;\n","import { createSelector } from \"reselect\";\nimport { memoize } from \"lodash\";\nimport { RootState } from \"modules/root\";\n\nconst tradesSelector = (state: RootState) => state.trades;\n\nexport const getTrades = createSelector(tradesSelector, (trades) =>\n  memoize((symbol: string) => trades[symbol])\n);\n","import Trades from \"./Trades.container\";\n\nexport default Trades;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport Trades, { Props } from \"./Trades\";\nimport { getTrades } from \"../../selectors\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const trades = selectedCurrencyPair\n    ? getTrades(state)(selectedCurrencyPair)\n    : [];\n\n  const subscriptionId = getSubscriptionId(state)(\"trades\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    trades,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(Trades);\n","import { createSelector } from \"reselect\";\nimport { memoize } from \"lodash\";\nimport { RootState } from \"modules/root\";\nimport { getLookupKey } from \"./utils\";\nimport { Candle } from \"./types/Candle\";\n\nconst DEFAULT_CANDLES: Candle[] = [];\n\nexport const candlesSelector = (state: RootState) => state.candles;\n\nexport const getCandles = createSelector(candlesSelector, (candles) =>\n  memoize(\n    (currencyPair: string, timeframe: string) =>\n      candles[getLookupKey(currencyPair, timeframe)] || DEFAULT_CANDLES,\n    (currencyPair, timeframe) => `${currencyPair}:${timeframe}`\n  )\n);\n","import { createSelector } from \"reselect\";\nimport { memoize, range } from \"lodash\";\nimport { RootState } from \"modules/root\";\nimport { getCurrencyPairs } from \"modules/reference-data/selectors\";\nimport { candlesSelector } from \"modules/candles/selectors\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport { getSubscriptionId, getSubscriptions } from \"core/transport/selectors\";\nimport { getValueAt } from \"core/utils\";\nimport { getLookupKey } from \"./../candles/utils\";\n\nconst tickerSelector = (state: RootState) => state.ticker;\n\nexport const getTicker = createSelector(tickerSelector, (ticker) =>\n  memoize((symbol: string) => ticker[symbol])\n);\n\nexport const getTickers = createSelector(\n  getCurrencyPairs,\n  tickerSelector,\n  (currencyPairs, ticker) =>\n    currencyPairs.map((currencyPair) => ({\n      currencyPair,\n      ...ticker[currencyPair],\n    }))\n);\n\nexport const getVisibleCurrencyPairTickers = createSelector(\n  getCurrencyPairs,\n  getSelectedCurrencyPair,\n  (allCurrencyPairs, selectedCurrencyPair) => {\n    let currencyPairs: string[] = [];\n\n    const selectedCurrencyPairIndex = allCurrencyPairs.indexOf(\n      selectedCurrencyPair || \"\"\n    );\n\n    // Pick a few currency pairs on each side of the selected one\n    if (selectedCurrencyPairIndex >= 0) {\n      currencyPairs = range(\n        selectedCurrencyPairIndex - 2,\n        selectedCurrencyPairIndex + 3\n      ).map((index) => getValueAt(allCurrencyPairs)(index));\n    }\n\n    return {\n      currencyPairs,\n      selectedCurrencyPairIndex,\n    };\n  }\n);\n\nexport const getTickersWithPrices = createSelector(\n  getTickers,\n  candlesSelector,\n  getSubscriptionId,\n  getSubscriptions,\n  (tickers, candles, subscribeIdGetter, subscriptions) => {\n    return tickers.map((ticker) => {\n      const subscriptionId = subscribeIdGetter(\"ticker\", {\n        symbol: `t${ticker.currencyPair}`,\n      });\n\n      return {\n        ...ticker,\n        prices: (candles[getLookupKey(ticker.currencyPair, \"5m\")] || []).map(\n          (ticker) => ticker.close\n        ),\n        isStale: Boolean(\n          subscriptionId ? subscriptions[subscriptionId].isStale : false\n        ),\n      };\n    });\n  }\n);\n","/*\n    Safe way to retrieve a value from an array\n\n    Index can be any number\n*/\nexport const getValueAt = (values: any[]) => (index: number) =>\n  values[((index % values.length) + values.length) % values.length];\n","import { useEffect, useRef } from \"react\";\n\nexport const usePrevious = (val: any) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = val;\n  }, [val]);\n\n  return ref.current;\n};\n","import styled from \"styled-components\";\nimport { Container as Stale } from \"core/components/Stale/Stale.styled\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div<{\n  isActive: boolean;\n}>`\n  position: relative;\n  cursor: pointer;\n  display: grid;\n  grid-template-rows: 25px 1fr;\n  height: 50px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-areas:\n    \"currencyPair price\"\n    \"relativeChange change\";\n  font-size: 12px;\n  padding: 5px 10px;\n  border: 1px solid\n    ${({ isActive }) => (isActive ? Palette.Orange : Palette.Border)};\n\n  &:hover {\n    background-color: #2d3436;\n  }\n\n  ${Stale} {\n    background: none;\n    top: 12px;\n    bottom: -12px;\n  }\n`;\n\nexport const CurrencyPair = styled.div`\n  color: ${Palette.White};\n  grid-area: currencyPair;\n`;\n\nexport const Price = styled.div`\n  color: ${Palette.White};\n  grid-area: price;\n  margin-right: 0;\n  margin-left: auto;\n`;\n\nexport const RelativeChange = styled.div<{\n  isPositive: boolean;\n}>`\n  grid-area: relativeChange;\n  font-size: 18px;\n  color: ${({ isPositive }) =>\n    isPositive ? Palette.Positive : Palette.Negative};\n  display: flex;\n  font-family: FiraSans-Medium;\n`;\n\nexport const Change = styled.div<{\n  isPositive: boolean;\n}>`\n  grid-area: change;\n  margin-right: 0;\n  margin-left: auto;\n  color: ${({ isPositive }) =>\n    isPositive ? Palette.Positive : Palette.Negative};\n`;\n","import styled from \"styled-components\";\nimport { range } from \"lodash\";\nimport { Container as TickerContainer } from \"../Ticker/Ticker.styled\";\n\nexport type ScrollDirection = \"left\" | \"right\";\n\nexport const Container = styled.div<{\n  itemCount: number;\n}>`\n  display: grid;\n  grid-template-columns: ${({ itemCount }) =>\n    `repeat(${itemCount}, minmax(240px, 1fr))`};\n  width: 100%;\n`;\n\nexport const TickerWrapper = styled.div<{\n  index: number;\n  itemCount: number;\n  direction: ScrollDirection;\n}>`\n  ${({ itemCount }) => {\n    const animations = range(0, itemCount).map((index) => {\n      const indexThreshold = Math.floor(itemCount / 2);\n      const val =\n        index <= indexThreshold\n          ? index\n          : indexThreshold - Math.abs(indexThreshold - index);\n      const scaleFactor = 1 - (indexThreshold - val) / 10;\n\n      return `\n            @keyframes slide-in-${index} {\n                100% { transform: scale(${scaleFactor}, ${scaleFactor}) translateX(0%);; }\n            }\n            `;\n    });\n\n    return animations.reduce((acc, a) => (acc += a), \"\");\n  }}\n\n  ${TickerContainer} {\n    animation: ${({ index }) => `slide-in-${index} 0.5s forwards;`};\n    transform: ${({ direction }) =>\n      `translateX(${direction === \"left\" ? 100 : -100}%);`};\n  }\n`;\n","import styled from \"styled-components\";\nimport Palette from \"../../../theme/style\";\n\nexport const Content = styled.div`\n  display: flex;\n`;\n\nexport const IdenticalPart = styled.div``;\n\nexport const ChangedPart = styled.div`\n  color: ${Palette.Orange};\n`;\n\nexport const DigitContainer = styled.span`\n  display: inline-block;\n`;\n","import React, { FC, useEffect, useState, createRef } from \"react\";\nimport { usePrevious } from \"core/hooks/usePrevious\";\nimport {\n  Content,\n  IdenticalPart,\n  DigitContainer,\n} from \"./UpdateHightlight.styled\";\nimport Palette from \"theme/style\";\n\nexport interface Props {\n  value?: string | null;\n  effect?: \"zoom\" | \"default\";\n}\n\nexport const calculateParts = (value: string, prevValue: string) => {\n  if (!value || !prevValue) {\n    return [value, \"\"];\n  }\n  const length = Math.min(value.length, prevValue.length);\n  let index = 0;\n  for (let i = 0; i < length; i++) {\n    if (value[i] === prevValue[i]) {\n      index++;\n    } else {\n      break;\n    }\n  }\n  return [value.slice(0, index), value.slice(index, value.length)];\n};\n\nconst AnimatedValue: FC<{\n  value: string;\n  delay?: number;\n  scale?: number;\n  duration?: number;\n}> = (props) => {\n  const { value, delay = 0, scale = 1, duration = 200 } = props;\n  const ref = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    let animation: Animation | undefined = undefined;\n    let timeoutId: ReturnType<typeof setTimeout> | undefined = undefined;\n\n    if (typeof ref.current?.animate === \"function\") {\n      const runAnimation = () => {\n        animation = ref.current?.animate(\n          [\n            // keyframes\n            { color: Palette.Orange, transform: \"scale(1)\" },\n            ...(scale === 1\n              ? []\n              : [{ color: Palette.White, transform: `scale(${scale})` }]),\n            { color: Palette.White, transform: \"scale(1)\" },\n          ],\n          {\n            duration,\n            iterations: 1,\n          }\n        );\n      };\n\n      if (delay) {\n        timeoutId = setTimeout(\n          () => requestAnimationFrame(runAnimation),\n          delay\n        );\n      } else {\n        requestAnimationFrame(runAnimation);\n      }\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      if (animation) {\n        animation.cancel();\n      }\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return <DigitContainer ref={ref}>{value}</DigitContainer>;\n};\n\nconst UpdateHighlight: FC<Props> = (props) => {\n  const changedPartRef = createRef<HTMLDivElement>();\n  const { value, effect = \"default\" } = props;\n  const prev = usePrevious(value);\n  const [[identicalPart, changedPart], setParts] = useState<string[]>([]);\n\n  useEffect(() => {\n    setParts(calculateParts(value || \"\", prev || \"\"));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  const digits =\n    effect === \"zoom\" ? (\n      changedPart\n        ?.split(\"\")\n        .map((digit, index) => (\n          <AnimatedValue\n            key={index}\n            value={digit}\n            delay={index * 100}\n            scale={2}\n            duration={300}\n          />\n        ))\n    ) : (\n      <AnimatedValue value={changedPart} />\n    );\n  return (\n    <Content>\n      <IdenticalPart>{identicalPart}</IdenticalPart>\n      <div ref={changedPartRef}>{digits}</div>\n    </Content>\n  );\n};\n\nexport default UpdateHighlight;\n","import styled from \"styled-components\";\n\nexport const Icon = styled.i`\n  font-size: 16px;\n  line-height: 20px;\n  width: 20px;\n`;\n","import TrendIndicator from \"./TrendIndicator\";\n\nexport default TrendIndicator;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Icon } from \"./TrendIndicator.styled\";\n\nconst SHOW_ICON_FOR_X_MS = 5000;\n\nexport interface Props {\n  value: number;\n}\n\nconst TrendIndicator: FC<Props> = (props) => {\n  const { value } = props;\n  const [isHidden, setIsHidden] = useState(true);\n\n  useEffect(() => {\n    setIsHidden(false);\n\n    const timeoutId = setTimeout(() => setIsHidden(true), SHOW_ICON_FOR_X_MS);\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [value]);\n\n  const icon = isHidden\n    ? \"\"\n    : value > 0\n    ? \"arrow_upward\"\n    : value < 0\n    ? \"arrow_downward\"\n    : \"\";\n\n  return <Icon className=\"material-icons\">{icon}</Icon>;\n};\n\nexport default TrendIndicator;\n","import React, { FC } from \"react\";\nimport {\n  Container,\n  CurrencyPair,\n  Price,\n  RelativeChange,\n  Change,\n} from \"./Ticker.styled\";\nimport UpdateHighlight from \"core/components/UpdateHighlight/UpdateHighlight\";\nimport TrendIndicator from \"core/components/TrendIndicator\";\nimport Stale from \"core/components/Stale\";\nimport { formatCurrencyPair, formatPrice } from \"modules/reference-data/utils\";\n\nexport interface StateProps {\n  currencyPair: string;\n  lastPrice: number;\n  dailyChange: number;\n  dailyChangeRelative: number;\n  isActive?: boolean;\n  isStale: boolean;\n}\n\nexport interface DispatchProps {\n  onClick?: () => void;\n}\n\nexport type Props = StateProps & DispatchProps;\n\nconst Ticker: FC<Props> = (props) => {\n  const {\n    currencyPair,\n    lastPrice,\n    dailyChange,\n    dailyChangeRelative,\n    onClick,\n    isActive,\n    isStale,\n  } = props;\n  const isPositiveChange = dailyChange > 0;\n  const percentChange = dailyChangeRelative\n    ? dailyChangeRelative * 100\n    : undefined;\n  return (\n    <Container onClick={onClick} isActive={!!isActive}>\n      {isStale ? (\n        <Stale />\n      ) : (\n        <>\n          <CurrencyPair>{formatCurrencyPair(currencyPair)}</CurrencyPair>\n          <Price>\n            <UpdateHighlight value={formatPrice(lastPrice)} effect={\"zoom\"} />\n          </Price>\n          <RelativeChange isPositive={isPositiveChange}>\n            <TrendIndicator value={dailyChangeRelative} />\n            <UpdateHighlight value={percentChange?.toFixed(2)} />\n            {percentChange && \"%\"}\n          </RelativeChange>\n          <Change isPositive={isPositiveChange}>\n            <UpdateHighlight value={dailyChange?.toFixed(2)} />\n          </Change>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Ticker;\n","import Ticker from \"./Ticker.container\";\n\nexport default Ticker;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { Dispatch } from \"redux\";\nimport { SelectionActions } from \"modules/selection/actions\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport { getTicker } from \"../../selectors\";\nimport Ticker, { StateProps, DispatchProps } from \"./Ticker\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\n\nexport interface ContainerProps {\n  currencyPair: string;\n}\n\nconst mapStateToProps = (\n  state: RootState,\n  props: ContainerProps\n): StateProps => {\n  const { currencyPair } = props;\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const ticker = getTicker(state)(currencyPair);\n\n  const subscriptionId = getSubscriptionId(state)(\"ticker\", {\n    symbol: `t${currencyPair}`,\n  });\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    lastPrice: ticker?.lastPrice,\n    currencyPair,\n    dailyChangeRelative: ticker?.dailyChangeRelative,\n    dailyChange: ticker?.dailyChange,\n    isActive: selectedCurrencyPair === currencyPair,\n    isStale,\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch,\n  ownProps: ContainerProps\n): DispatchProps => {\n  const { currencyPair } = ownProps;\n\n  return {\n    onClick: () =>\n      dispatch(SelectionActions.selectCurrencyPair({ currencyPair })),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ticker);\n","import React, { FC, useState, useEffect } from \"react\";\nimport { usePrevious } from \"core/hooks/usePrevious\";\nimport { Container, TickerWrapper, ScrollDirection } from \"./Tickers.styled\";\nimport Ticker from \"../Ticker\";\n\nexport interface Props {\n  currencyPairs: string[];\n  selectedCurrencyPairIndex?: number;\n}\n\nconst Tickers: FC<Props> = (props) => {\n  const { currencyPairs, selectedCurrencyPairIndex } = props;\n  const [direction, setDirection] = useState<ScrollDirection>(\"left\");\n  const previousSelectedCurrencyPairIndex = usePrevious(\n    selectedCurrencyPairIndex\n  );\n\n  useEffect(() => {\n    const direction =\n      (previousSelectedCurrencyPairIndex || 0) >\n      (selectedCurrencyPairIndex || 0)\n        ? \"right\"\n        : \"left\";\n    setDirection(direction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedCurrencyPairIndex]);\n\n  return (\n    <Container itemCount={currencyPairs.length} className=\"tickers\">\n      {currencyPairs.map((currencyPair, index) => (\n        <TickerWrapper\n          index={index}\n          itemCount={currencyPairs.length}\n          key={currencyPair}\n          direction={direction}\n        >\n          <Ticker currencyPair={currencyPair} />\n        </TickerWrapper>\n      ))}\n    </Container>\n  );\n};\n\nexport default Tickers;\n","import Tickers from \"./Tickers.container\";\n\nexport default Tickers;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getVisibleCurrencyPairTickers } from \"modules/ticker/selectors\";\nimport Tickers, { Props } from \"./Tickers\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const {\n    currencyPairs,\n    selectedCurrencyPairIndex,\n  } = getVisibleCurrencyPairTickers(state);\n\n  return {\n    currencyPairs,\n    selectedCurrencyPairIndex,\n  };\n};\n\nexport default connect(mapStateToProps)(Tickers);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  position: relative;\n`;\n","import * as Highcharts from \"highcharts/highstock\";\nimport Palette from \"./style\";\n\n(Highcharts as any).theme = {\n  colors: [\n    \"#2b908f\",\n    \"#90ee7e\",\n    \"#f45b5b\",\n    \"#7798BF\",\n    \"#aaeeee\",\n    \"#ff0066\",\n    \"#eeaaee\",\n    \"#55BF3B\",\n    \"#DF5353\",\n    \"#7798BF\",\n    \"#aaeeee\",\n  ],\n  chart: {\n    backgroundColor: {\n      stops: [\n        [0, \"#2a2a2b\"],\n        [1, \"#3e3e40\"],\n      ],\n    },\n  },\n  xAxis: {\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  yAxis: {\n    gridLineColor: Palette.Border,\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    tickWidth: 1,\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  tooltip: {\n    borderColor: Palette.Border,\n    backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n    style: {\n      color: Palette.White,\n    },\n  },\n  plotOptions: {\n    series: {\n      dataLabels: {\n        color: \"#F0F0F3\",\n        style: {\n          fontSize: \"13px\",\n        },\n      },\n      marker: {\n        lineColor: \"#333\",\n      },\n    },\n    boxplot: {\n      fillColor: \"#505053\",\n    },\n    candlestick: {\n      lineColor: \"white\",\n    },\n    errorbar: {\n      color: \"white\",\n    },\n  },\n  legend: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    itemStyle: {\n      color: \"#E0E0E3\",\n    },\n    itemHoverStyle: {\n      color: \"#FFF\",\n    },\n    itemHiddenStyle: {\n      color: \"#606063\",\n    },\n    title: {\n      style: {\n        color: \"#C0C0C0\",\n      },\n    },\n  },\n  credits: {\n    style: {\n      color: \"#666\",\n    },\n  },\n  labels: {\n    style: {\n      color: \"#707073\",\n    },\n  },\n  drilldown: {\n    activeAxisLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n    activeDataLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n  },\n  navigation: {\n    buttonOptions: {\n      symbolStroke: \"#DDDDDD\",\n      theme: {\n        fill: \"#505053\",\n      },\n    },\n  },\n  // scroll charts\n  rangeSelector: {\n    buttonTheme: {\n      fill: \"#505053\",\n      stroke: \"#000000\",\n      style: {\n        color: \"#CCC\",\n      },\n      states: {\n        hover: {\n          fill: \"#707073\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n        select: {\n          fill: \"#000003\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n      },\n    },\n    inputBoxBorderColor: \"#505053\",\n    inputStyle: {\n      backgroundColor: \"#333\",\n      color: \"silver\",\n    },\n    labelStyle: {\n      color: \"silver\",\n    },\n  },\n  navigator: {\n    handles: {\n      backgroundColor: \"#666\",\n      borderColor: \"#AAA\",\n    },\n    outlineColor: \"#CCC\",\n    maskFill: \"rgba(255,255,255,0.1)\",\n    series: {\n      color: \"#7798BF\",\n      lineColor: \"#A6C7ED\",\n    },\n    xAxis: {\n      gridLineColor: \"#505053\",\n    },\n  },\n  scrollbar: {\n    barBackgroundColor: \"#808083\",\n    barBorderColor: \"#808083\",\n    buttonArrowColor: \"#CCC\",\n    buttonBackgroundColor: \"#606063\",\n    buttonBorderColor: \"#606063\",\n    rifleColor: \"#FFF\",\n    trackBackgroundColor: \"#404043\",\n    trackBorderColor: \"#404043\",\n  },\n};\n\nHighcharts.setOptions((Highcharts as any).theme);\n","import React, { FC, useEffect, useState } from \"react\";\nimport * as Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Stale from \"core/components/Stale\";\nimport Loading from \"core/components/Loading\";\nimport { Container } from \"./CandlesChart.styled\";\nimport { Candle } from \"../../types/Candle\";\nimport { formatCurrencyPair } from \"modules/reference-data/utils\";\nimport \"theme/Highstock\";\nimport Palette from \"theme/style\";\n\nexport interface Props {\n  candles: Candle[];\n  currencyPair?: string;\n  isStale: boolean;\n}\n\nconst CandlesChart: FC<Props> = (props) => {\n  const { candles, currencyPair, isStale } = props;\n  const [isLoading, setIsLoading] = useState(true);\n  const [chartOptions, setChartOptions] = useState<Highcharts.Options>({\n    time: {\n      useUTC: false,\n    },\n    yAxis: [\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"OHLC\",\n        },\n        height: \"70%\",\n        lineWidth: 2,\n        resize: {\n          enabled: true,\n        },\n      },\n      {\n        labels: {\n          align: \"right\",\n          x: -3,\n        },\n        title: {\n          text: \"Volume\",\n        },\n        top: \"75%\",\n        height: \"25%\",\n        offset: 0,\n        lineWidth: 2,\n      },\n    ],\n    series: [\n      {\n        type: \"candlestick\",\n        data: [],\n      },\n      {\n        type: \"column\",\n        name: \"Volume\",\n        data: [],\n        yAxis: 1,\n      },\n    ],\n    rangeSelector: {\n      selected: 2,\n      buttons: [\n        {\n          type: \"minute\",\n          count: 5,\n          text: \"5m\",\n        },\n        {\n          type: \"minute\",\n          count: 15,\n          text: \"15m\",\n        },\n        {\n          type: \"minute\",\n          count: 30,\n          text: \"30m\",\n        },\n        {\n          type: \"hour\",\n          count: 1,\n          text: \"1h\",\n        },\n        {\n          type: \"hour\",\n          count: 12,\n          text: \"12h\",\n        },\n        {\n          type: \"all\",\n          text: \"All\",\n        },\n      ],\n    },\n  });\n\n  useEffect(() => {\n    setIsLoading(candles.length === 0);\n\n    const ohlc = candles\n      .map(({ timestamp, ...rest }) => ({\n        x: timestamp,\n        ...rest,\n      }))\n      .sort((a, b) => a.x - b.x);\n    const volumes = candles\n      .map(({ timestamp, volume }) => [timestamp, volume])\n      .sort((a, b) => a[0] - b[0]);\n\n    setChartOptions({\n      series: [\n        {\n          type: \"candlestick\",\n          name: currencyPair && formatCurrencyPair(currencyPair),\n          data: ohlc,\n        },\n        {\n          type: \"column\",\n          data: volumes,\n        },\n      ],\n      plotOptions: {\n        candlestick: {\n          color: Palette.Negative,\n          upColor: Palette.Positive,\n        },\n        column: {\n          color: Palette.LightGray,\n        },\n      },\n    });\n  }, [candles, currencyPair]);\n\n  return (\n    <Container className=\"candles-chart\">\n      {isStale && <Stale />}\n      {isLoading && <Loading />}\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={chartOptions}\n        constructorType={\"stockChart\"}\n      />\n    </Container>\n  );\n};\n\nexport default CandlesChart;\n","import CandlesChart from \"./CandlesChart.container\";\n\nexport default CandlesChart;\n","import { connect } from \"react-redux\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\nimport CandlesChart, { Props } from \"./CandlesChart\";\nimport { RootState } from \"modules/root\";\nimport { getCandles } from \"../../selectors\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const candles = selectedCurrencyPair\n    ? getCandles(state)(selectedCurrencyPair, \"1m\")\n    : [];\n\n  const subscriptionId = getSubscriptionId(state)(\"candles\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    candles,\n    currencyPair: selectedCurrencyPair,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(CandlesChart);\n","import { ICellRendererParams } from \"ag-grid-community\";\nimport Palette from \"theme/style\";\n\nconst amountRenderer = (value: string, styles: { [key: string]: any }) => {\n  const formattedStyles = Object.keys(styles)\n    .map((key) => [key, styles[key]].join(\":\"))\n    .join(\";\");\n\n  return `\n        <div style=\"position: relative;\">\n            <div style=\"height: 30px; position: absolute; z-index: 0; ${formattedStyles}\"></div>\n            <div style=\"position: absolute; z-index: 1;\">${value}</div>\n        </div>`;\n};\n\nexport const bidAmountRenderer = (params: ICellRendererParams) => {\n  const { bidDepth: depth, maxDepth } = params.data;\n  const width = ((depth || 0) / maxDepth) * 100;\n  return amountRenderer(params.valueFormatted, {\n    \"background-color\": Palette.BidTransparent,\n    width: `${width}%`,\n    left: \"-12px\",\n  });\n};\n\nexport const askAmountRenderer = (params: ICellRendererParams) => {\n  const { askDepth: depth, maxDepth } = params.data;\n  const width = ((depth || 0) / maxDepth) * 100;\n  return amountRenderer(params.valueFormatted, {\n    \"background-color\": Palette.AskTransparent,\n    width: `${width}%`,\n    right: \"-12px\",\n  });\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  font-family: FiraSans-Light;\n`;\n","import React, { FC, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ColDef, GridApi } from \"ag-grid-community\";\nimport { priceFormatter, amountFormatter } from \"modules/ag-grid/formatter\";\nimport { useThrottle } from \"core/hooks/useThrottle\";\nimport Stale from \"core/components/Stale\";\nimport Loading from \"core/components/Loading\";\nimport { useGridResize } from \"core/hooks/useGridResize\";\nimport { bidAmountRenderer, askAmountRenderer } from \"./renderers\";\nimport { Order } from \"../../types/Order\";\nimport { Container } from \"./Book.styled\";\nimport Palette from \"theme/style\";\n\nexport interface Props {\n  orders: { bid: Order; ask: Order }[];\n  isStale?: boolean;\n}\n\nconst Book: FC<Props> = (props) => {\n  const { orders, isStale } = props;\n  const [gridApi, setGridApi] = useState<GridApi | undefined>();\n  const throttledOrders = useThrottle<{ bid: Order; ask: Order }[]>(\n    orders,\n    100\n  );\n\n  const columnDefs: ColDef[] = [\n    {\n      headerName: \"Bid Amount\",\n      field: \"bid.amount\",\n      valueFormatter: amountFormatter,\n      cellRenderer: bidAmountRenderer,\n    },\n    {\n      headerName: \"Bid Price\",\n      field: \"bid.price\",\n      cellStyle: () => ({\n        color: Palette.Bid,\n      }),\n      type: \"numericColumn\",\n      valueFormatter: priceFormatter,\n    },\n    {\n      headerName: \"Ask Price\",\n      field: \"ask.price\",\n      cellStyle: () => ({\n        color: Palette.Ask,\n      }),\n      valueFormatter: priceFormatter,\n    },\n    {\n      headerName: \"Ask Amount\",\n      field: \"ask.amount\",\n      valueFormatter: (params) =>\n        amountFormatter({ value: Math.abs(params.value) }),\n      cellRenderer: askAmountRenderer,\n    },\n  ];\n\n  useGridResize(gridApi);\n\n  return (\n    <Container className=\"ag-theme-balham-dark\">\n      {isStale && <Stale />}\n      <AgGridReact\n        columnDefs={columnDefs}\n        rowData={throttledOrders}\n        deltaRowDataMode={true}\n        getRowNodeId={(data) => [data.bid?.id, data.ask?.id].join(\"#\")}\n        onGridReady={(event) => {\n          setGridApi(event.api);\n        }}\n        noRowsOverlayComponent={\"customLoadingOverlay\"}\n        frameworkComponents={{\n          customLoadingOverlay: Loading,\n        }}\n      ></AgGridReact>\n    </Container>\n  );\n};\n\nexport default Book;\n","import { createSelector } from \"reselect\";\nimport { memoize, range, uniq } from \"lodash\";\nimport { RootState } from \"modules/root\";\nimport { Order } from \"./types/Order\";\n\nconst bookSelector = (state: RootState) => state.book;\n\nexport const getRawBook = createSelector(bookSelector, (book) =>\n  memoize((symbol: string) => book[symbol])\n);\n\nexport const getBook = createSelector(bookSelector, (book) =>\n  memoize((symbol: string) => {\n    const rawBook = book[symbol] || [];\n\n    const bids = rawBook\n      .filter((order) => order.amount > 0)\n      .sort((a, b) => b.price - a.price);\n    const asks = rawBook\n      .filter((order) => order.amount < 0)\n      .sort((a, b) => a.price - b.price);\n\n    const levels = Math.max(bids.length, asks.length);\n    const maxBidDepth = bids\n      .map((bid) => bid.amount)\n      .reduce((acc, v) => (acc += v), 0);\n    const maxAskDepth = asks\n      .map((ask) => Math.abs(ask.amount))\n      .reduce((acc, v) => (acc += v), 0);\n    const maxDepth = maxBidDepth + maxAskDepth;\n\n    const result: {\n      bid: Order;\n      ask: Order;\n      bidDepth: number;\n      askDepth: number;\n      maxDepth: number;\n    }[] = [];\n    range(levels).forEach((level) => {\n      const bid = bids[level];\n      const ask = asks[level];\n\n      result.push({\n        bid,\n        ask,\n        bidDepth:\n          bid &&\n          (result[level - 1] ? result[level - 1].bidDepth : 0) + bid.amount,\n        askDepth:\n          ask &&\n          (result[level - 1] ? result[level - 1].askDepth : 0) +\n            Math.abs(ask.amount),\n        maxDepth,\n      });\n    });\n    return result;\n  })\n);\n\nconst getPricePoints = (orders: Order[]) =>\n  uniq(orders.map((order) => order.price)).sort((a, b) => a - b);\n\nconst computeDepth = (orders: Order[]) => {\n  return (\n    pricePoints: number[],\n    orderFilter: (order: Order, pricePoint: number) => boolean\n  ) => {\n    return pricePoints.map((price) => {\n      const depth = orders\n        .filter((order) => orderFilter(order, price))\n        .reduce((acc, order) => {\n          return (acc += Math.abs(order.amount));\n        }, 0);\n      return {\n        price,\n        depth,\n      };\n    });\n  };\n};\n\nexport const getDepth = createSelector(bookSelector, (book) =>\n  memoize((symbol: string) => {\n    const rawBook = book[symbol] || [];\n\n    const bids = rawBook.filter((order) => order.amount > 0);\n\n    const asks = rawBook.filter((order) => order.amount < 0);\n\n    const bidPrices = getPricePoints(bids);\n    const askPrices = getPricePoints(asks);\n\n    const bidDepth = computeDepth(bids)(\n      bidPrices,\n      (order, pricePoint) => order.price >= pricePoint\n    );\n    const askDepth = computeDepth(asks)(\n      askPrices,\n      (order, pricePoint) => order.price <= pricePoint\n    );\n\n    return {\n      bids: bidDepth,\n      asks: askDepth,\n    };\n  })\n);\n","import Book from \"./Book.container\";\n\nexport default Book;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\nimport Book, { Props } from \"./Book\";\nimport { getBook } from \"../../selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const orders = selectedCurrencyPair\n    ? getBook(state)(selectedCurrencyPair)\n    : [];\n\n  const subscriptionId = getSubscriptionId(state)(\"book\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    orders,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(Book);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  position: relative;\n`;\n","import * as Highcharts from \"highcharts\";\nimport Palette from \"./style\";\n\n(Highcharts as any).theme = {\n  colors: [\n    \"#2b908f\",\n    \"#90ee7e\",\n    \"#f45b5b\",\n    \"#7798BF\",\n    \"#aaeeee\",\n    \"#ff0066\",\n    \"#eeaaee\",\n    \"#55BF3B\",\n    \"#DF5353\",\n    \"#7798BF\",\n    \"#aaeeee\",\n  ],\n  chart: {\n    backgroundColor: {\n      stops: [\n        [0, \"#2a2a2b\"],\n        [1, \"#3e3e40\"],\n      ],\n    },\n  },\n  xAxis: {\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  yAxis: {\n    gridLineColor: Palette.Border,\n    labels: {\n      style: {\n        color: \"#E0E0E3\",\n      },\n    },\n    lineColor: \"#707073\",\n    minorGridLineColor: \"#505053\",\n    tickColor: \"#707073\",\n    tickWidth: 1,\n    title: {\n      style: {\n        color: \"#A0A0A3\",\n      },\n    },\n  },\n  tooltip: {\n    borderColor: Palette.Border,\n    backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n    style: {\n      color: Palette.White,\n    },\n  },\n  plotOptions: {\n    series: {\n      dataLabels: {\n        color: \"#F0F0F3\",\n        style: {\n          fontSize: \"13px\",\n        },\n      },\n      marker: {\n        lineColor: \"#333\",\n      },\n    },\n    boxplot: {\n      fillColor: \"#505053\",\n    },\n    candlestick: {\n      lineColor: \"white\",\n    },\n    errorbar: {\n      color: \"white\",\n    },\n  },\n  legend: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    itemStyle: {\n      color: \"#E0E0E3\",\n    },\n    itemHoverStyle: {\n      color: \"#FFF\",\n    },\n    itemHiddenStyle: {\n      color: \"#606063\",\n    },\n    title: {\n      style: {\n        color: \"#C0C0C0\",\n      },\n    },\n  },\n  credits: {\n    style: {\n      color: \"#666\",\n    },\n  },\n  labels: {\n    style: {\n      color: \"#707073\",\n    },\n  },\n  drilldown: {\n    activeAxisLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n    activeDataLabelStyle: {\n      color: \"#F0F0F3\",\n    },\n  },\n  navigation: {\n    buttonOptions: {\n      symbolStroke: \"#DDDDDD\",\n      theme: {\n        fill: \"#505053\",\n      },\n    },\n  },\n  // scroll charts\n  rangeSelector: {\n    buttonTheme: {\n      fill: \"#505053\",\n      stroke: \"#000000\",\n      style: {\n        color: \"#CCC\",\n      },\n      states: {\n        hover: {\n          fill: \"#707073\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n        select: {\n          fill: \"#000003\",\n          stroke: \"#000000\",\n          style: {\n            color: \"white\",\n          },\n        },\n      },\n    },\n    inputBoxBorderColor: \"#505053\",\n    inputStyle: {\n      backgroundColor: \"#333\",\n      color: \"silver\",\n    },\n    labelStyle: {\n      color: \"silver\",\n    },\n  },\n  navigator: {\n    handles: {\n      backgroundColor: \"#666\",\n      borderColor: \"#AAA\",\n    },\n    outlineColor: \"#CCC\",\n    maskFill: \"rgba(255,255,255,0.1)\",\n    series: {\n      color: \"#7798BF\",\n      lineColor: \"#A6C7ED\",\n    },\n    xAxis: {\n      gridLineColor: \"#505053\",\n    },\n  },\n  scrollbar: {\n    barBackgroundColor: \"#808083\",\n    barBorderColor: \"#808083\",\n    buttonArrowColor: \"#CCC\",\n    buttonBackgroundColor: \"#606063\",\n    buttonBorderColor: \"#606063\",\n    rifleColor: \"#FFF\",\n    trackBackgroundColor: \"#404043\",\n    trackBorderColor: \"#404043\",\n  },\n};\n\nHighcharts.setOptions((Highcharts as any).theme);\n","import React, { FC, useState, useEffect } from \"react\";\nimport * as Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useThrottle } from \"core/hooks/useThrottle\";\nimport Stale from \"core/components/Stale\";\nimport { Container } from \"./DepthChart.styled\";\nimport Loading from \"core/components/Loading\";\nimport Palette from \"theme/style\";\nimport \"theme/Highchart\";\n\ninterface Depth {\n  bids: { price: number; depth: number }[];\n  asks: { price: number; depth: number }[];\n}\n\nexport interface Props {\n  depth: Depth;\n  isStale: boolean;\n}\n\nconst DepthChart: FC<Props> = (props) => {\n  const { depth, isStale } = props;\n  const throttledDepth = useThrottle<Depth>(depth, 500);\n  const [isLoading, setIsLoading] = useState(true);\n  const [chartOptions, setChartOptions] = useState<Highcharts.Options>({\n    chart: {\n      type: \"area\",\n      animation: false,\n    },\n    title: {\n      text: \"\",\n    },\n    legend: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: \"bids\",\n        type: \"area\",\n        data: [],\n      },\n      {\n        name: \"asks\",\n        type: \"area\",\n        data: [],\n      },\n    ],\n    xAxis: {\n      labels: {\n        autoRotation: false,\n      },\n    },\n    yAxis: {\n      title: {\n        text: \"\",\n      },\n      labels: {\n        enabled: false,\n      },\n    },\n    plotOptions: {\n      area: {\n        marker: {\n          enabled: false,\n          states: {\n            hover: {\n              enabled: false,\n            },\n          },\n        },\n      },\n    },\n  });\n\n  useEffect(() => {\n    const { bids, asks } = throttledDepth;\n\n    setIsLoading(bids.length === 0 && asks.length === 0);\n\n    setChartOptions({\n      xAxis: {\n        categories: [...bids, ...asks].map((order) => order.price.toString()),\n        labels: {\n          step: 5,\n          formatter: function () {\n            return Number.parseFloat(this.value.toString()).toFixed(0);\n          },\n        },\n      },\n      series: [\n        {\n          name: \"bids\",\n          type: \"area\",\n          data: [...bids.map((bid) => bid.depth), ...asks.map(() => null)],\n          color: Palette.Bid,\n        },\n        {\n          name: \"asks\",\n          type: \"area\",\n          data: [...bids.map(() => null), ...asks.map((ask) => ask.depth)],\n          color: Palette.Ask,\n        },\n      ],\n    });\n  }, [throttledDepth]);\n\n  return (\n    <Container>\n      {isStale && <Stale />}\n      {isLoading && <Loading />}\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={chartOptions}\n        constructorType={\"chart\"}\n      />\n    </Container>\n  );\n};\n\nexport default DepthChart;\n","import DepthChart from \"./DepthChart.container\";\n\nexport default DepthChart;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport {\n  getSubscriptionId,\n  getIsSubscriptionStale,\n} from \"core/transport/selectors\";\nimport DepthChart, { Props } from \"./DepthChart\";\nimport { getDepth } from \"../../selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n  const depth = selectedCurrencyPair\n    ? getDepth(state)(selectedCurrencyPair)\n    : { bids: [], asks: [] };\n\n  const subscriptionId = getSubscriptionId(state)(\"book\");\n  const isStale =\n    typeof subscriptionId === \"undefined\"\n      ? false\n      : getIsSubscriptionStale(state)(subscriptionId);\n\n  return {\n    depth,\n    isStale,\n  };\n};\n\nexport default connect(mapStateToProps)(DepthChart);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n\n  .selected-row {\n    font-weight: 700;\n  }\n\n  .stale-row {\n    opacity: 0.6;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const SvgContainer = styled.svg`\n  fill: none;\n`;\n","import LineChart from \"./LineChart\";\n\nexport default LineChart;\n","import React, { FC } from \"react\";\nimport { SvgContainer } from \"./LineChart.styled\";\nimport Palette from \"theme/style\";\n\ninterface Props {\n  values: number[];\n  width?: number;\n  height?: number;\n}\n\nconst LineChart: FC<Props> = (props) => {\n  const { values, width = 50, height = 25 } = props;\n  const maxX = values.length - 1;\n  const minValue = Math.min(...values);\n  const maxValue = Math.max(...values);\n  const diff = maxValue - minValue;\n\n  const getSvgX = (x: number) => (x / maxX) * width;\n\n  const getSvgY = (y: number) => height - ((y - minValue) * height) / diff;\n\n  if (values.length === 0) {\n    return <div></div>;\n  }\n\n  let pathD = `M ${getSvgX(0)} ${getSvgY(values[0])} `;\n  pathD += values.map((value, i) => {\n    const x = getSvgX(i);\n    const y = getSvgY(value);\n\n    return `L  ${x}  ${y} `;\n  });\n\n  return (\n    <SvgContainer viewBox={`0 0 ${width} ${height}`}>\n      <path d={pathD} style={{ stroke: Palette.LightGray }} />\n    </SvgContainer>\n  );\n};\n\nexport default LineChart;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 0 5px;\n`;\n","import React, { FC } from \"react\";\nimport LineChart from \"core/components/LineChart\";\nimport { Container } from \"./PriceChartRenderer.styled\";\n\ninterface Props {\n  value: number[];\n}\n\nconst PriceChartRenderer: FC<Props> = (props) => {\n  const { value: prices } = props;\n\n  return (\n    <Container>\n      <LineChart values={prices} />\n    </Container>\n  );\n};\n\nexport default PriceChartRenderer;\n","import UpdateHighlight from \"./UpdateHighlight\";\n\nexport default UpdateHighlight;\n","import React, { Component } from \"react\";\nimport UpdateHighlight from \"core/components/UpdateHighlight\";\n\ninterface Props {\n  valueFormatted: string;\n}\n\ninterface State {\n  valueFormatted: string;\n}\n\nclass PriceRenderer extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      valueFormatted: props.valueFormatted,\n    };\n  }\n\n  refresh(params: Props) {\n    this.setState({\n      valueFormatted: params.valueFormatted,\n    });\n\n    return true;\n  }\n\n  render() {\n    const { valueFormatted } = this.state;\n    return <UpdateHighlight value={valueFormatted} />;\n  }\n}\n\nexport default PriceRenderer;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ColDef, GridApi, RowNode } from \"ag-grid-community\";\nimport { isEqual } from \"lodash\";\nimport { priceFormatter, volumeFormatter } from \"modules/ag-grid/formatter\";\nimport { useGridResize } from \"core/hooks/useGridResize\";\nimport { Ticker } from \"modules/ticker/types/Ticker\";\nimport Loading from \"core/components/Loading\";\nimport { formatCurrencyPair } from \"modules/reference-data/utils\";\nimport { Container } from \"./Market.styled\";\nimport PriceChartRenderer from \"./PriceChartRenderer\";\nimport PriceRenderer from \"./PriceRenderer\";\nimport Palette from \"theme/style\";\n\nexport interface StateProps {\n  tickers: (Ticker & {\n    currencyPair: string;\n    prices: number[];\n    isStale: boolean;\n  })[];\n  selectedCurrencyPair?: string;\n}\n\nexport interface DispatchProps {\n  onClick: (currencyPair: string) => void;\n}\n\nexport type Props = StateProps & DispatchProps;\n\nconst Market: FC<Props> = (props) => {\n  const { tickers, selectedCurrencyPair, onClick } = props;\n  const [gridApi, setGridApi] = useState<GridApi | undefined>();\n\n  const columnDefs: ColDef[] = [\n    {\n      headerName: \"Ccy\",\n      field: \"currencyPair\",\n      valueFormatter: (params) => formatCurrencyPair(params.value),\n    },\n    {\n      headerName: \"Bid Price\",\n      field: \"bid\",\n      cellStyle: () => ({\n        color: Palette.Bid,\n        display: \"flex\",\n        \"justify-content\": \"flex-end\",\n      }),\n      type: \"numericColumn\",\n      valueFormatter: priceFormatter,\n      cellRenderer: \"priceRenderer\",\n    },\n    {\n      headerName: \"Ask Price\",\n      field: \"ask\",\n      cellStyle: () => ({\n        color: Palette.Ask,\n      }),\n      valueFormatter: priceFormatter,\n      cellRenderer: \"priceRenderer\",\n    },\n    {\n      headerName: \"Volume\",\n      field: \"volume\",\n      valueFormatter: volumeFormatter,\n    },\n    {\n      headerName: \"\",\n      field: \"prices\",\n      cellRenderer: \"priceChartRenderer\",\n      width: 100,\n      cellStyle: () => ({\n        \"padding-left\": 0,\n        \"padding-right\": 0,\n      }),\n      equals: isEqual,\n    },\n  ];\n\n  const rowClassRules = {\n    \"selected-row\": (params: any) => params.node.isSelected(),\n    \"stale-row\": (params: any) => params.data.isStale,\n  };\n\n  useEffect(() => {\n    if (gridApi) {\n      const nodesToRefresh: RowNode[] = [];\n      gridApi.forEachNode(function (node) {\n        const shouldSelect = node.data.currencyPair === selectedCurrencyPair;\n        if (node.isSelected()) {\n          nodesToRefresh.push(node);\n        } else if (shouldSelect) {\n          nodesToRefresh.push(node);\n        }\n        node.setSelected(shouldSelect);\n      });\n      gridApi.redrawRows({\n        rowNodes: nodesToRefresh,\n      });\n    }\n  }, [gridApi, selectedCurrencyPair]);\n\n  useGridResize(gridApi);\n\n  return (\n    <Container className=\"ag-theme-balham-dark\">\n      <AgGridReact\n        columnDefs={columnDefs}\n        rowData={tickers}\n        rowClassRules={rowClassRules}\n        deltaRowDataMode={true}\n        getRowNodeId={(data) => data.currencyPair}\n        onGridReady={(event) => {\n          setGridApi(event.api);\n        }}\n        rowSelection={\"single\"}\n        onRowClicked={(event) => {\n          onClick(event.data.currencyPair);\n        }}\n        noRowsOverlayComponent={\"customLoadingOverlay\"}\n        frameworkComponents={{\n          priceChartRenderer: PriceChartRenderer,\n          priceRenderer: PriceRenderer,\n          customLoadingOverlay: Loading,\n        }}\n      ></AgGridReact>\n    </Container>\n  );\n};\n\nexport default Market;\n","import Market from \"./Market.container\";\n\nexport default Market;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\nimport { getTickersWithPrices } from \"modules/ticker/selectors\";\nimport { RootState } from \"modules/root\";\nimport { SelectionActions } from \"modules/selection/actions\";\nimport Market, { StateProps, DispatchProps } from \"./Market\";\n\nconst mapStateToProps = (state: RootState): StateProps => {\n  const tickers = getTickersWithPrices(state);\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n\n  return {\n    tickers,\n    selectedCurrencyPair,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\n  return {\n    onClick: (currencyPair: string) =>\n      dispatch(SelectionActions.selectCurrencyPair({ currencyPair })),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Market);\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  height: 100%;\n  display: grid;\n  grid-template-rows: 20px 1fr;\n  grid-template-columns: 1fr;\n  grid-template-areas:\n    \"header\"\n    \"body\";\n`;\n\nexport const Header = styled.div`\n  grid-area: header;\n  color: ${Palette.Label};\n  font-size: 12px;\n`;\n\nexport const Body = styled.div`\n  grid-area: body;\n`;\n","import Widget from \"./Widget\";\n\nexport default Widget;\n","import React, { FC } from \"react\";\nimport { Container, Header, Body } from \"./Widget.styled\";\n\nexport interface Props {\n  children: JSX.Element;\n  title: string;\n}\n\nconst Widget: FC<Props> = (props) => {\n  const { children, title } = props;\n\n  return (\n    <Container>\n      <Header>{title}</Header>\n      <Body>{children}</Body>\n    </Container>\n  );\n};\n\nexport default Widget;\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  font-size: 10px;\n  color: ${Palette.White};\n  padding: 0 10px;\n  display: flex;\n  width: 85px;\n  justify-content: space-between;\n  color: ${Palette.LightGray};\n`;\n","import Diagnostics from \"./Diagnostics\";\n\nexport default Diagnostics;\n","import React, { FC, useState, useEffect } from \"react\";\nimport { Container } from \"./Diagnostics.styled\";\n\nconst DIAGNOSTICS_INTERVAL_MS = 2000;\n\nconst Diagnostics: FC<{}> = () => {\n  const [delay, setDelay] = useState<number | undefined>();\n  useEffect(() => {\n    let timeoutId: number | undefined = undefined;\n    const intervalId = setInterval(() => {\n      const time = Date.now();\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      timeoutId = setTimeout(() => {\n        setDelay(Date.now() - time);\n      });\n    }, DIAGNOSTICS_INTERVAL_MS);\n\n    return () => {\n      clearInterval(intervalId);\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, []);\n\n  return (\n    <Container>\n      <span>UI Latency: </span>\n      <span>{delay || \"---\"}ms</span>\n    </Container>\n  );\n};\n\nexport default Diagnostics;\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"modules/root\";\n\nconst getPing = (state: RootState) => state.ping;\n\nexport const getLatency = createSelector(getPing, (ping) => ping.latency);\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  color: ${Palette.White};\n  font-size: 10px;\n  width: 85px;\n  display: flex;\n  justify-content: space-between;\n  color: ${Palette.LightGray};\n`;\n\nexport const Icon = styled.i`\n  font-size: 16px;\n`;\n","import React, { FC } from \"react\";\nimport { Container, Icon } from \"./Latency.styled\";\n\nexport interface Props {\n  latency?: number;\n}\n\nconst Latency: FC<Props> = (props) => {\n  const { latency } = props;\n  return (\n    <Container>\n      <span>Round trip: </span>\n      {latency === -1 ? (\n        <Icon className=\"material-icons\">warning</Icon>\n      ) : (\n        <span>{latency || \"---\"}ms</span>\n      )}\n    </Container>\n  );\n};\n\nexport default Latency;\n","import Latency from \"./Latency.container\";\n\nexport default Latency;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport { getLatency } from \"modules/ping/selectors\";\nimport Latency, { Props } from \"./Latency\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const latency = getLatency(state);\n\n  return {\n    latency,\n  };\n};\n\nexport default connect(mapStateToProps)(Latency);\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div<{\n  width: number;\n}>`\n  perspective: ${({ width }) => `${width}px`};\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Cube = styled.div<{\n  width: number;\n}>`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  transform-style: preserve-3d;\n  transform: ${({ width }) => `translateZ(${-width / 2}px)`};\n`;\n\nexport const Face = styled.div<{\n  width: number;\n}>`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: ${Palette.BackgroundColor};\n`;\n\nexport const FrontFace = styled(Face)`\n  transform: ${({ width }) => `rotateY(0deg) translateZ(${width / 2}px)`};\n`;\n\nexport const RightFace = styled(Face)`\n  transform: ${({ width }) => `rotateY(90deg) translateZ(${width / 2}px)`};\n  border: 1px solid ${Palette.Border};\n`;\n","import AnimatedCube from \"./AnimatedCube\";\n\nexport default AnimatedCube;\n","import React, { FC, useEffect, createRef, useState } from \"react\";\nimport { debounce } from \"lodash\";\nimport { Container, Cube, FrontFace, RightFace } from \"./AnimatedCube.styled\";\nimport { usePrevious } from \"core/hooks/usePrevious\";\n\nconst DEBOUNCE_RESIZE_IN_MS = 200;\n\nexport interface Props {\n  trigger: any;\n  children?: JSX.Element | string;\n}\n\nconst AnimatedCube: FC<Props> = (props) => {\n  const { trigger, children } = props;\n  const [width, setWidth] = useState(0);\n  const previousTrigger = usePrevious(trigger);\n  const previousWidth = usePrevious(width);\n  const containerRef = createRef<HTMLDivElement>();\n  const cubeRef = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef && containerRef.current) {\n        const { width } = containerRef.current.getBoundingClientRect();\n        console.log(`Update cube width to ${width}`);\n\n        setWidth(width);\n      } else {\n        console.warn(\"Failed to update cube\");\n      }\n    };\n\n    const handleWindowResize = debounce(() => {\n      requestAnimationFrame(updateDimensions);\n    }, DEBOUNCE_RESIZE_IN_MS);\n\n    updateDimensions();\n\n    window.addEventListener(\"resize\", handleWindowResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, [containerRef]);\n\n  useEffect(() => {\n    let animation: Animation | undefined = undefined;\n\n    // don't trigger animation the first time we render the component, nor on resize\n    if (previousTrigger && previousWidth === width) {\n      requestAnimationFrame(() => {\n        animation = cubeRef.current?.animate(\n          [\n            { transform: `translateZ(-${width / 2}px)` },\n            { transform: `translateZ(-${width / 2}px) rotateY(-90deg)` },\n          ],\n          {\n            duration: 1000,\n            iterations: 1,\n            easing: \"ease-out\",\n          }\n        );\n      });\n    }\n\n    return () => {\n      if (animation) {\n        animation.cancel();\n      }\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [trigger, width]);\n\n  return (\n    <Container ref={containerRef} width={width}>\n      <Cube ref={cubeRef} width={width}>\n        {<FrontFace width={width}>{children}</FrontFace>}\n        {<RightFace width={width}></RightFace>} }\n      </Cube>\n    </Container>\n  );\n};\n\nexport default AnimatedCube;\n","import React, { FC } from \"react\";\nimport AnimatedCube from \"core/components/AnimatedCube\";\n\nexport interface Props {\n  currencyPair?: string;\n  children?: JSX.Element | string;\n}\n\nconst CurrencyPairTransition: FC<Props> = (props) => {\n  const { currencyPair, children } = props;\n\n  return <AnimatedCube trigger={currencyPair}>{children}</AnimatedCube>;\n};\n\nexport default CurrencyPairTransition;\n","import CurrencyPairTransition from \"./CurrencyPairTransition.container\";\n\nexport default CurrencyPairTransition;\n","import { connect } from \"react-redux\";\nimport { RootState } from \"modules/root\";\nimport CurrencyPairTransition, { Props } from \"./CurrencyPairTransition\";\nimport { getSelectedCurrencyPair } from \"modules/selection/selectors\";\n\nconst mapStateToProps = (state: RootState): Props => {\n  const selectedCurrencyPair = getSelectedCurrencyPair(state);\n\n  return {\n    currencyPair: selectedCurrencyPair,\n  };\n};\n\nexport default connect(mapStateToProps)(CurrencyPairTransition);\n","import styled from \"styled-components\";\nimport Palette from \"theme/style\";\n\nexport const Container = styled.div`\n  background-color: ${Palette.BackgroundColor};\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-gap: 5px;\n  padding: 5px 10px;\n  width: 100%;\n  height: 100%;\n  @media only screen and (min-width: 1200px) {\n    grid-template-rows: 40px 70px 1fr 250px 30px;\n    grid-template-columns: 450px 1fr 1fr;\n    grid-template-areas:\n      \"header header header\"\n      \"tickers tickers tickers\"\n      \"market candles candles\"\n      \"trades book depth\"\n      \"footer footer footer\";\n  }\n\n  @media only screen and (min-width: 600px) and (max-width: 1200px) {\n    grid-template-rows: 40px 70px 1fr 1fr 30px;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas:\n      \"header header\"\n      \"market book\"\n      \"market book\"\n      \"trades depth\"\n      \"footer footer\";\n\n    .tickers {\n      display: none;\n    }\n\n    .candles-chart {\n      display: none;\n    }\n  }\n\n  @media only screen and (max-width: 600px) {\n    grid-template-rows: 40px calc(100% - 90px) 30px;\n    grid-template-columns: calc(100% - 20px);\n    grid-template-areas:\n      \"header\"\n      \"market\"\n      \"footer\";\n\n    .candles-chart {\n      display: none;\n    }\n  }\n`;\n\nexport const Header = styled.div`\n  grid-area: header;\n  color: ${Palette.White};\n  font-family: FiraSans-MediumItalic;\n  background-color: #2d3436;\n  padding: 0 0 0 10px;\n  font-size: 28px;\n`;\n\nexport const TickersPanel = styled.div`\n  grid-area: tickers;\n  margin: 0 auto;\n`;\n\nexport const MarketPanel = styled.div`\n  grid-area: market;\n`;\n\nexport const TradesPanel = styled.div`\n  grid-area: trades;\n`;\n\nexport const CandlesPanel = styled.div`\n  grid-area: candles;\n`;\n\nexport const BookPanel = styled.div`\n  grid-area: book;\n`;\n\nexport const DepthPanel = styled.div`\n  grid-area: depth;\n`;\n\nexport const Footer = styled.div`\n  grid-area: footer;\n  padding: 0 10px;\n  display: flex;\n  justify-content: flex-end;\n`;\n","import React, { useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./modules/redux/store\";\nimport { AppActions } from \"./modules/app/actions\";\nimport Trades from \"modules/trades/components/Trades\";\nimport Tickers from \"modules/ticker/components/Tickers\";\nimport CandlesChart from \"modules/candles/components/CandlesChart\";\nimport Book from \"modules/book/components/Book\";\nimport DepthChart from \"modules/book/components/DepthChart\";\nimport Market from \"modules/ticker/components/Market\";\nimport Widget from \"core/components/Widget\";\nimport Diagnostics from \"core/components/Diagnostics\";\nimport Latency from \"modules/ping/components/Latency\";\nimport CurrencyPairTransition from \"modules/common/CurrencyPairTransition\";\nimport {\n  Container,\n  Content,\n  Header,\n  MarketPanel,\n  TradesPanel,\n  TickersPanel,\n  CandlesPanel,\n  BookPanel,\n  DepthPanel,\n  Footer,\n} from \"App.styled\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham-dark.css\";\nimport \"theme/fonts.css\";\n\nfunction App() {\n  const store = configureStore();\n\n  useEffect(() => {\n    store.dispatch(AppActions.bootstrapApp());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Container>\n        <Content>\n          <Header>Trader Interface</Header>\n          <TickersPanel>\n            <Tickers />\n          </TickersPanel>\n          <MarketPanel>\n            <Widget title={\"Market\"}>\n              <Market />\n            </Widget>\n          </MarketPanel>\n          <TradesPanel>\n            <Widget title={\"Trades\"}>\n              <CurrencyPairTransition>\n                <Trades />\n              </CurrencyPairTransition>\n            </Widget>\n          </TradesPanel>\n          <CandlesPanel>\n            <CandlesChart />\n          </CandlesPanel>\n          <BookPanel>\n            <Widget title={\"Book\"}>\n              <CurrencyPairTransition>\n                <Book />\n              </CurrencyPairTransition>\n            </Widget>\n          </BookPanel>\n          <DepthPanel>\n            <Widget title={\"Depth\"}>\n              <CurrencyPairTransition>\n                <DepthChart />\n              </CurrencyPairTransition>\n            </Widget>\n          </DepthPanel>\n          <Footer>\n            <Latency />\n            <Diagnostics />\n          </Footer>\n        </Content>\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}